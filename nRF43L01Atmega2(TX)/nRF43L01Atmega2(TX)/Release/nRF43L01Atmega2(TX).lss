
nRF43L01Atmega2(TX).elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000084c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001a  00800060  0000084c  000008e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000029  0080007a  0080007a  000008fa  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000008fa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000092c  2**2
                  CONTENTS, READONLY
  5 .debug_info   0000052e  00000000  00000000  00000968  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000004e7  00000000  00000000  00000e96  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000115  00000000  00000000  0000137d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000001af  00000000  00000000  00001492  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 45 03 	jmp	0x68a	; 0x68a <__vector_1>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e4       	ldi	r30, 0x4C	; 76
  68:	f8 e0       	ldi	r31, 0x08	; 8
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 37       	cpi	r26, 0x7A	; 122
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	aa e7       	ldi	r26, 0x7A	; 122
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a3 3a       	cpi	r26, 0xA3	; 163
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <main>
  8a:	0c 94 24 04 	jmp	0x848	; 0x848 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <ToggleLights.part.0>:
  92:	9b b3       	in	r25, 0x1b	; 27
  94:	82 e0       	ldi	r24, 0x02	; 2
  96:	89 27       	eor	r24, r25
  98:	8b bb       	out	0x1b, r24	; 27
  9a:	2f ef       	ldi	r18, 0xFF	; 255
  9c:	80 e7       	ldi	r24, 0x70	; 112
  9e:	92 e0       	ldi	r25, 0x02	; 2
  a0:	21 50       	subi	r18, 0x01	; 1
  a2:	80 40       	sbci	r24, 0x00	; 0
  a4:	90 40       	sbci	r25, 0x00	; 0
  a6:	e1 f7       	brne	.-8      	; 0xa0 <ToggleLights.part.0+0xe>
  a8:	00 c0       	rjmp	.+0      	; 0xaa <ToggleLights.part.0+0x18>
  aa:	00 00       	nop
  ac:	08 95       	ret

000000ae <spi_master_init>:
  ae:	87 b3       	in	r24, 0x17	; 23
  b0:	88 6b       	ori	r24, 0xB8	; 184
  b2:	87 bb       	out	0x17, r24	; 23
  b4:	be 98       	cbi	0x17, 6	; 23
  b6:	8d b1       	in	r24, 0x0d	; 13
  b8:	80 65       	ori	r24, 0x50	; 80
  ba:	8d b9       	out	0x0d, r24	; 13
  bc:	c4 9a       	sbi	0x18, 4	; 24
  be:	c3 98       	cbi	0x18, 3	; 24
  c0:	08 95       	ret

000000c2 <spi_Send_Receive>:
  c2:	8f b9       	out	0x0f, r24	; 15
  c4:	77 9b       	sbis	0x0e, 7	; 14
  c6:	fe cf       	rjmp	.-4      	; 0xc4 <spi_Send_Receive+0x2>
  c8:	8f b1       	in	r24, 0x0f	; 15
  ca:	08 95       	ret

000000cc <Uart_Init>:
  cc:	89 9a       	sbi	0x11, 1	; 17
  ce:	88 98       	cbi	0x11, 0	; 17
  d0:	10 bc       	out	0x20, r1	; 32
  d2:	87 e6       	ldi	r24, 0x67	; 103
  d4:	89 b9       	out	0x09, r24	; 9
  d6:	8a b1       	in	r24, 0x0a	; 10
  d8:	88 61       	ori	r24, 0x18	; 24
  da:	8a b9       	out	0x0a, r24	; 10
  dc:	80 b5       	in	r24, 0x20	; 32
  de:	86 68       	ori	r24, 0x86	; 134
  e0:	80 bd       	out	0x20, r24	; 32
  e2:	08 95       	ret

000000e4 <Uart_Transmit>:
  e4:	5d 9b       	sbis	0x0b, 5	; 11
  e6:	fe cf       	rjmp	.-4      	; 0xe4 <Uart_Transmit>
  e8:	8c b9       	out	0x0c, r24	; 12
  ea:	08 95       	ret

000000ec <Uart_Send_String>:
  ec:	cf 93       	push	r28
  ee:	df 93       	push	r29
  f0:	ec 01       	movw	r28, r24
  f2:	89 91       	ld	r24, Y+
  f4:	88 23       	and	r24, r24
  f6:	19 f0       	breq	.+6      	; 0xfe <Uart_Send_String+0x12>
  f8:	0e 94 72 00 	call	0xe4	; 0xe4 <Uart_Transmit>
  fc:	fa cf       	rjmp	.-12     	; 0xf2 <Uart_Send_String+0x6>
  fe:	df 91       	pop	r29
 100:	cf 91       	pop	r28
 102:	08 95       	ret

00000104 <EnableExternalInterrupt0>:
 104:	8a 98       	cbi	0x11, 2	; 17
 106:	8b b7       	in	r24, 0x3b	; 59
 108:	80 64       	ori	r24, 0x40	; 64
 10a:	8b bf       	out	0x3b, r24	; 59
 10c:	85 b7       	in	r24, 0x35	; 53
 10e:	82 60       	ori	r24, 0x02	; 2
 110:	85 bf       	out	0x35, r24	; 53
 112:	78 94       	sei
 114:	08 95       	ret

00000116 <ReadWriteNRF>:
 116:	cf 92       	push	r12
 118:	df 92       	push	r13
 11a:	ef 92       	push	r14
 11c:	ff 92       	push	r15
 11e:	0f 93       	push	r16
 120:	1f 93       	push	r17
 122:	cf 93       	push	r28
 124:	df 93       	push	r29
 126:	d8 2f       	mov	r29, r24
 128:	c6 2f       	mov	r28, r22
 12a:	7a 01       	movw	r14, r20
 12c:	c2 2e       	mov	r12, r18
 12e:	f8 94       	cli
 130:	81 30       	cpi	r24, 0x01	; 1
 132:	29 f4       	brne	.+10     	; 0x13e <ReadWriteNRF+0x28>
 134:	60 3a       	cpi	r22, 0xA0	; 160
 136:	19 f0       	breq	.+6      	; 0x13e <ReadWriteNRF+0x28>
 138:	61 3e       	cpi	r22, 0xE1	; 225
 13a:	09 f0       	breq	.+2      	; 0x13e <ReadWriteNRF+0x28>
 13c:	c0 5e       	subi	r28, 0xE0	; 224
 13e:	85 e3       	ldi	r24, 0x35	; 53
 140:	8a 95       	dec	r24
 142:	f1 f7       	brne	.-4      	; 0x140 <ReadWriteNRF+0x2a>
 144:	00 00       	nop
 146:	c4 98       	cbi	0x18, 4	; 24
 148:	e5 e3       	ldi	r30, 0x35	; 53
 14a:	ea 95       	dec	r30
 14c:	f1 f7       	brne	.-4      	; 0x14a <ReadWriteNRF+0x34>
 14e:	00 00       	nop
 150:	8c 2f       	mov	r24, r28
 152:	0e 94 61 00 	call	0xc2	; 0xc2 <spi_Send_Receive>
 156:	f5 e3       	ldi	r31, 0x35	; 53
 158:	fa 95       	dec	r31
 15a:	f1 f7       	brne	.-4      	; 0x158 <ReadWriteNRF+0x42>
 15c:	00 00       	nop
 15e:	87 01       	movw	r16, r14
 160:	8a e7       	ldi	r24, 0x7A	; 122
 162:	e8 2e       	mov	r14, r24
 164:	80 e0       	ldi	r24, 0x00	; 0
 166:	f8 2e       	mov	r15, r24
 168:	d1 2c       	mov	r13, r1
 16a:	c7 01       	movw	r24, r14
 16c:	8a 57       	subi	r24, 0x7A	; 122
 16e:	90 40       	sbci	r25, 0x00	; 0
 170:	8c 15       	cp	r24, r12
 172:	9d 05       	cpc	r25, r13
 174:	c4 f4       	brge	.+48     	; 0x1a6 <ReadWriteNRF+0x90>
 176:	d1 11       	cpse	r29, r1
 178:	08 c0       	rjmp	.+16     	; 0x18a <ReadWriteNRF+0x74>
 17a:	c0 3a       	cpi	r28, 0xA0	; 160
 17c:	31 f0       	breq	.+12     	; 0x18a <ReadWriteNRF+0x74>
 17e:	8f ef       	ldi	r24, 0xFF	; 255
 180:	0e 94 61 00 	call	0xc2	; 0xc2 <spi_Send_Receive>
 184:	f7 01       	movw	r30, r14
 186:	80 83       	st	Z, r24
 188:	04 c0       	rjmp	.+8      	; 0x192 <ReadWriteNRF+0x7c>
 18a:	f8 01       	movw	r30, r16
 18c:	80 81       	ld	r24, Z
 18e:	0e 94 61 00 	call	0xc2	; 0xc2 <spi_Send_Receive>
 192:	f5 e3       	ldi	r31, 0x35	; 53
 194:	fa 95       	dec	r31
 196:	f1 f7       	brne	.-4      	; 0x194 <ReadWriteNRF+0x7e>
 198:	00 00       	nop
 19a:	8f ef       	ldi	r24, 0xFF	; 255
 19c:	e8 1a       	sub	r14, r24
 19e:	f8 0a       	sbc	r15, r24
 1a0:	0f 5f       	subi	r16, 0xFF	; 255
 1a2:	1f 4f       	sbci	r17, 0xFF	; 255
 1a4:	e2 cf       	rjmp	.-60     	; 0x16a <ReadWriteNRF+0x54>
 1a6:	c4 9a       	sbi	0x18, 4	; 24
 1a8:	78 94       	sei
 1aa:	8a e7       	ldi	r24, 0x7A	; 122
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	df 91       	pop	r29
 1b0:	cf 91       	pop	r28
 1b2:	1f 91       	pop	r17
 1b4:	0f 91       	pop	r16
 1b6:	ff 90       	pop	r15
 1b8:	ef 90       	pop	r14
 1ba:	df 90       	pop	r13
 1bc:	cf 90       	pop	r12
 1be:	08 95       	ret

000001c0 <Nrf24_init>:
 1c0:	bf 92       	push	r11
 1c2:	cf 92       	push	r12
 1c4:	df 92       	push	r13
 1c6:	ef 92       	push	r14
 1c8:	ff 92       	push	r15
 1ca:	0f 93       	push	r16
 1cc:	1f 93       	push	r17
 1ce:	cf 93       	push	r28
 1d0:	df 93       	push	r29
 1d2:	00 d0       	rcall	.+0      	; 0x1d4 <Nrf24_init+0x14>
 1d4:	00 d0       	rcall	.+0      	; 0x1d6 <Nrf24_init+0x16>
 1d6:	1f 92       	push	r1
 1d8:	cd b7       	in	r28, 0x3d	; 61
 1da:	de b7       	in	r29, 0x3e	; 62
 1dc:	18 2f       	mov	r17, r24
 1de:	6b 01       	movw	r12, r22
 1e0:	7a 01       	movw	r14, r20
 1e2:	b2 2e       	mov	r11, r18
 1e4:	2f ef       	ldi	r18, 0xFF	; 255
 1e6:	81 ee       	ldi	r24, 0xE1	; 225
 1e8:	94 e0       	ldi	r25, 0x04	; 4
 1ea:	21 50       	subi	r18, 0x01	; 1
 1ec:	80 40       	sbci	r24, 0x00	; 0
 1ee:	90 40       	sbci	r25, 0x00	; 0
 1f0:	e1 f7       	brne	.-8      	; 0x1ea <Nrf24_init+0x2a>
 1f2:	00 c0       	rjmp	.+0      	; 0x1f4 <Nrf24_init+0x34>
 1f4:	00 00       	nop
 1f6:	01 e0       	ldi	r16, 0x01	; 1
 1f8:	01 0f       	add	r16, r17
 1fa:	09 83       	std	Y+1, r16	; 0x01
 1fc:	21 e0       	ldi	r18, 0x01	; 1
 1fe:	ae 01       	movw	r20, r28
 200:	4f 5f       	subi	r20, 0xFF	; 255
 202:	5f 4f       	sbci	r21, 0xFF	; 255
 204:	61 e0       	ldi	r22, 0x01	; 1
 206:	81 e0       	ldi	r24, 0x01	; 1
 208:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 20c:	8f e2       	ldi	r24, 0x2F	; 47
 20e:	89 83       	std	Y+1, r24	; 0x01
 210:	21 e0       	ldi	r18, 0x01	; 1
 212:	ae 01       	movw	r20, r28
 214:	4f 5f       	subi	r20, 0xFF	; 255
 216:	5f 4f       	sbci	r21, 0xFF	; 255
 218:	64 e0       	ldi	r22, 0x04	; 4
 21a:	81 e0       	ldi	r24, 0x01	; 1
 21c:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 220:	09 83       	std	Y+1, r16	; 0x01
 222:	21 e0       	ldi	r18, 0x01	; 1
 224:	ae 01       	movw	r20, r28
 226:	4f 5f       	subi	r20, 0xFF	; 255
 228:	5f 4f       	sbci	r21, 0xFF	; 255
 22a:	62 e0       	ldi	r22, 0x02	; 2
 22c:	81 e0       	ldi	r24, 0x01	; 1
 22e:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 232:	83 e0       	ldi	r24, 0x03	; 3
 234:	89 83       	std	Y+1, r24	; 0x01
 236:	21 e0       	ldi	r18, 0x01	; 1
 238:	ae 01       	movw	r20, r28
 23a:	4f 5f       	subi	r20, 0xFF	; 255
 23c:	5f 4f       	sbci	r21, 0xFF	; 255
 23e:	63 e0       	ldi	r22, 0x03	; 3
 240:	81 e0       	ldi	r24, 0x01	; 1
 242:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 246:	8c e6       	ldi	r24, 0x6C	; 108
 248:	89 83       	std	Y+1, r24	; 0x01
 24a:	21 e0       	ldi	r18, 0x01	; 1
 24c:	ae 01       	movw	r20, r28
 24e:	4f 5f       	subi	r20, 0xFF	; 255
 250:	5f 4f       	sbci	r21, 0xFF	; 255
 252:	65 e0       	ldi	r22, 0x05	; 5
 254:	81 e0       	ldi	r24, 0x01	; 1
 256:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 25a:	87 e0       	ldi	r24, 0x07	; 7
 25c:	89 83       	std	Y+1, r24	; 0x01
 25e:	21 e0       	ldi	r18, 0x01	; 1
 260:	ae 01       	movw	r20, r28
 262:	4f 5f       	subi	r20, 0xFF	; 255
 264:	5f 4f       	sbci	r21, 0xFF	; 255
 266:	66 e0       	ldi	r22, 0x06	; 6
 268:	81 e0       	ldi	r24, 0x01	; 1
 26a:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 26e:	85 e0       	ldi	r24, 0x05	; 5
 270:	89 83       	std	Y+1, r24	; 0x01
 272:	12 30       	cpi	r17, 0x02	; 2
 274:	09 f4       	brne	.+2      	; 0x278 <Nrf24_init+0xb8>
 276:	43 c0       	rjmp	.+134    	; 0x2fe <Nrf24_init+0x13e>
 278:	b8 f4       	brcc	.+46     	; 0x2a8 <Nrf24_init+0xe8>
 27a:	11 23       	and	r17, r17
 27c:	71 f1       	breq	.+92     	; 0x2da <Nrf24_init+0x11a>
 27e:	11 30       	cpi	r17, 0x01	; 1
 280:	09 f0       	breq	.+2      	; 0x284 <Nrf24_init+0xc4>
 282:	75 c0       	rjmp	.+234    	; 0x36e <Nrf24_init+0x1ae>
 284:	25 e0       	ldi	r18, 0x05	; 5
 286:	a6 01       	movw	r20, r12
 288:	6b e0       	ldi	r22, 0x0B	; 11
 28a:	81 e0       	ldi	r24, 0x01	; 1
 28c:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 290:	25 e0       	ldi	r18, 0x05	; 5
 292:	a7 01       	movw	r20, r14
 294:	60 e1       	ldi	r22, 0x10	; 16
 296:	81 e0       	ldi	r24, 0x01	; 1
 298:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 29c:	21 e0       	ldi	r18, 0x01	; 1
 29e:	ae 01       	movw	r20, r28
 2a0:	4f 5f       	subi	r20, 0xFF	; 255
 2a2:	5f 4f       	sbci	r21, 0xFF	; 255
 2a4:	62 e1       	ldi	r22, 0x12	; 18
 2a6:	60 c0       	rjmp	.+192    	; 0x368 <Nrf24_init+0x1a8>
 2a8:	14 30       	cpi	r17, 0x04	; 4
 2aa:	09 f4       	brne	.+2      	; 0x2ae <Nrf24_init+0xee>
 2ac:	4c c0       	rjmp	.+152    	; 0x346 <Nrf24_init+0x186>
 2ae:	c8 f1       	brcs	.+114    	; 0x322 <Nrf24_init+0x162>
 2b0:	15 30       	cpi	r17, 0x05	; 5
 2b2:	09 f0       	breq	.+2      	; 0x2b6 <Nrf24_init+0xf6>
 2b4:	5c c0       	rjmp	.+184    	; 0x36e <Nrf24_init+0x1ae>
 2b6:	25 e0       	ldi	r18, 0x05	; 5
 2b8:	a6 01       	movw	r20, r12
 2ba:	6f e0       	ldi	r22, 0x0F	; 15
 2bc:	81 e0       	ldi	r24, 0x01	; 1
 2be:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 2c2:	25 e0       	ldi	r18, 0x05	; 5
 2c4:	a7 01       	movw	r20, r14
 2c6:	60 e1       	ldi	r22, 0x10	; 16
 2c8:	81 e0       	ldi	r24, 0x01	; 1
 2ca:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 2ce:	21 e0       	ldi	r18, 0x01	; 1
 2d0:	ae 01       	movw	r20, r28
 2d2:	4f 5f       	subi	r20, 0xFF	; 255
 2d4:	5f 4f       	sbci	r21, 0xFF	; 255
 2d6:	66 e1       	ldi	r22, 0x16	; 22
 2d8:	47 c0       	rjmp	.+142    	; 0x368 <Nrf24_init+0x1a8>
 2da:	25 e0       	ldi	r18, 0x05	; 5
 2dc:	a6 01       	movw	r20, r12
 2de:	6a e0       	ldi	r22, 0x0A	; 10
 2e0:	81 e0       	ldi	r24, 0x01	; 1
 2e2:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 2e6:	25 e0       	ldi	r18, 0x05	; 5
 2e8:	a7 01       	movw	r20, r14
 2ea:	60 e1       	ldi	r22, 0x10	; 16
 2ec:	81 e0       	ldi	r24, 0x01	; 1
 2ee:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 2f2:	21 e0       	ldi	r18, 0x01	; 1
 2f4:	ae 01       	movw	r20, r28
 2f6:	4f 5f       	subi	r20, 0xFF	; 255
 2f8:	5f 4f       	sbci	r21, 0xFF	; 255
 2fa:	61 e1       	ldi	r22, 0x11	; 17
 2fc:	35 c0       	rjmp	.+106    	; 0x368 <Nrf24_init+0x1a8>
 2fe:	25 e0       	ldi	r18, 0x05	; 5
 300:	a6 01       	movw	r20, r12
 302:	6c e0       	ldi	r22, 0x0C	; 12
 304:	81 e0       	ldi	r24, 0x01	; 1
 306:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 30a:	25 e0       	ldi	r18, 0x05	; 5
 30c:	a7 01       	movw	r20, r14
 30e:	60 e1       	ldi	r22, 0x10	; 16
 310:	81 e0       	ldi	r24, 0x01	; 1
 312:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 316:	21 e0       	ldi	r18, 0x01	; 1
 318:	ae 01       	movw	r20, r28
 31a:	4f 5f       	subi	r20, 0xFF	; 255
 31c:	5f 4f       	sbci	r21, 0xFF	; 255
 31e:	63 e1       	ldi	r22, 0x13	; 19
 320:	23 c0       	rjmp	.+70     	; 0x368 <Nrf24_init+0x1a8>
 322:	25 e0       	ldi	r18, 0x05	; 5
 324:	a6 01       	movw	r20, r12
 326:	6d e0       	ldi	r22, 0x0D	; 13
 328:	81 e0       	ldi	r24, 0x01	; 1
 32a:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 32e:	25 e0       	ldi	r18, 0x05	; 5
 330:	a7 01       	movw	r20, r14
 332:	60 e1       	ldi	r22, 0x10	; 16
 334:	81 e0       	ldi	r24, 0x01	; 1
 336:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 33a:	21 e0       	ldi	r18, 0x01	; 1
 33c:	ae 01       	movw	r20, r28
 33e:	4f 5f       	subi	r20, 0xFF	; 255
 340:	5f 4f       	sbci	r21, 0xFF	; 255
 342:	64 e1       	ldi	r22, 0x14	; 20
 344:	11 c0       	rjmp	.+34     	; 0x368 <Nrf24_init+0x1a8>
 346:	25 e0       	ldi	r18, 0x05	; 5
 348:	a6 01       	movw	r20, r12
 34a:	6e e0       	ldi	r22, 0x0E	; 14
 34c:	81 e0       	ldi	r24, 0x01	; 1
 34e:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 352:	25 e0       	ldi	r18, 0x05	; 5
 354:	a7 01       	movw	r20, r14
 356:	60 e1       	ldi	r22, 0x10	; 16
 358:	81 e0       	ldi	r24, 0x01	; 1
 35a:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 35e:	21 e0       	ldi	r18, 0x01	; 1
 360:	ae 01       	movw	r20, r28
 362:	4f 5f       	subi	r20, 0xFF	; 255
 364:	5f 4f       	sbci	r21, 0xFF	; 255
 366:	65 e1       	ldi	r22, 0x15	; 21
 368:	81 e0       	ldi	r24, 0x01	; 1
 36a:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 36e:	24 e5       	ldi	r18, 0x54	; 84
 370:	b2 12       	cpse	r11, r18
 372:	02 c0       	rjmp	.+4      	; 0x378 <Nrf24_init+0x1b8>
 374:	8e e1       	ldi	r24, 0x1E	; 30
 376:	01 c0       	rjmp	.+2      	; 0x37a <Nrf24_init+0x1ba>
 378:	8f e1       	ldi	r24, 0x1F	; 31
 37a:	89 83       	std	Y+1, r24	; 0x01
 37c:	21 e0       	ldi	r18, 0x01	; 1
 37e:	ae 01       	movw	r20, r28
 380:	4f 5f       	subi	r20, 0xFF	; 255
 382:	5f 4f       	sbci	r21, 0xFF	; 255
 384:	60 e0       	ldi	r22, 0x00	; 0
 386:	81 e0       	ldi	r24, 0x01	; 1
 388:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 38c:	8f ef       	ldi	r24, 0xFF	; 255
 38e:	91 ee       	ldi	r25, 0xE1	; 225
 390:	24 e0       	ldi	r18, 0x04	; 4
 392:	81 50       	subi	r24, 0x01	; 1
 394:	90 40       	sbci	r25, 0x00	; 0
 396:	20 40       	sbci	r18, 0x00	; 0
 398:	e1 f7       	brne	.-8      	; 0x392 <Nrf24_init+0x1d2>
 39a:	00 c0       	rjmp	.+0      	; 0x39c <Nrf24_init+0x1dc>
 39c:	00 00       	nop
 39e:	0f 90       	pop	r0
 3a0:	0f 90       	pop	r0
 3a2:	0f 90       	pop	r0
 3a4:	0f 90       	pop	r0
 3a6:	0f 90       	pop	r0
 3a8:	df 91       	pop	r29
 3aa:	cf 91       	pop	r28
 3ac:	1f 91       	pop	r17
 3ae:	0f 91       	pop	r16
 3b0:	ff 90       	pop	r15
 3b2:	ef 90       	pop	r14
 3b4:	df 90       	pop	r13
 3b6:	cf 90       	pop	r12
 3b8:	bf 90       	pop	r11
 3ba:	08 95       	ret

000003bc <resetNrf>:
 3bc:	85 e3       	ldi	r24, 0x35	; 53
 3be:	8a 95       	dec	r24
 3c0:	f1 f7       	brne	.-4      	; 0x3be <resetNrf+0x2>
 3c2:	00 00       	nop
 3c4:	c4 98       	cbi	0x18, 4	; 24
 3c6:	85 e3       	ldi	r24, 0x35	; 53
 3c8:	8a 95       	dec	r24
 3ca:	f1 f7       	brne	.-4      	; 0x3c8 <resetNrf+0xc>
 3cc:	00 00       	nop
 3ce:	87 e2       	ldi	r24, 0x27	; 39
 3d0:	0e 94 61 00 	call	0xc2	; 0xc2 <spi_Send_Receive>
 3d4:	85 e3       	ldi	r24, 0x35	; 53
 3d6:	8a 95       	dec	r24
 3d8:	f1 f7       	brne	.-4      	; 0x3d6 <resetNrf+0x1a>
 3da:	00 00       	nop
 3dc:	80 e7       	ldi	r24, 0x70	; 112
 3de:	0e 94 61 00 	call	0xc2	; 0xc2 <spi_Send_Receive>
 3e2:	85 e3       	ldi	r24, 0x35	; 53
 3e4:	8a 95       	dec	r24
 3e6:	f1 f7       	brne	.-4      	; 0x3e4 <resetNrf+0x28>
 3e8:	00 00       	nop
 3ea:	c4 9a       	sbi	0x18, 4	; 24
 3ec:	08 95       	ret

000003ee <transmit_data>:
 3ee:	cf 93       	push	r28
 3f0:	df 93       	push	r29
 3f2:	ec 01       	movw	r28, r24
 3f4:	20 e0       	ldi	r18, 0x00	; 0
 3f6:	ac 01       	movw	r20, r24
 3f8:	61 ee       	ldi	r22, 0xE1	; 225
 3fa:	80 e0       	ldi	r24, 0x00	; 0
 3fc:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 400:	25 e0       	ldi	r18, 0x05	; 5
 402:	ae 01       	movw	r20, r28
 404:	60 ea       	ldi	r22, 0xA0	; 160
 406:	80 e0       	ldi	r24, 0x00	; 0
 408:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 40c:	8f e3       	ldi	r24, 0x3F	; 63
 40e:	9c e9       	ldi	r25, 0x9C	; 156
 410:	01 97       	sbiw	r24, 0x01	; 1
 412:	f1 f7       	brne	.-4      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 414:	00 c0       	rjmp	.+0      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 416:	00 00       	nop
 418:	c3 9a       	sbi	0x18, 3	; 24
 41a:	87 ec       	ldi	r24, 0xC7	; 199
 41c:	90 e0       	ldi	r25, 0x00	; 0
 41e:	01 97       	sbiw	r24, 0x01	; 1
 420:	f1 f7       	brne	.-4      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 422:	00 c0       	rjmp	.+0      	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 424:	00 00       	nop
 426:	c3 98       	cbi	0x18, 3	; 24
 428:	95 e3       	ldi	r25, 0x35	; 53
 42a:	9a 95       	dec	r25
 42c:	f1 f7       	brne	.-4      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 42e:	00 00       	nop
 430:	df 91       	pop	r29
 432:	cf 91       	pop	r28
 434:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <resetNrf>

00000438 <receive_data>:
 438:	78 94       	sei
 43a:	c3 9a       	sbi	0x18, 3	; 24
 43c:	2f ef       	ldi	r18, 0xFF	; 255
 43e:	89 e6       	ldi	r24, 0x69	; 105
 440:	98 e1       	ldi	r25, 0x18	; 24
 442:	21 50       	subi	r18, 0x01	; 1
 444:	80 40       	sbci	r24, 0x00	; 0
 446:	90 40       	sbci	r25, 0x00	; 0
 448:	e1 f7       	brne	.-8      	; 0x442 <receive_data+0xa>
 44a:	00 c0       	rjmp	.+0      	; 0x44c <receive_data+0x14>
 44c:	00 00       	nop
 44e:	c3 98       	cbi	0x18, 3	; 24
 450:	f8 94       	cli
 452:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <resetNrf>

00000456 <changeNrfToRX>:
 456:	cf 93       	push	r28
 458:	df 93       	push	r29
 45a:	1f 92       	push	r1
 45c:	cd b7       	in	r28, 0x3d	; 61
 45e:	de b7       	in	r29, 0x3e	; 62
 460:	8f e1       	ldi	r24, 0x1F	; 31
 462:	89 83       	std	Y+1, r24	; 0x01
 464:	21 e0       	ldi	r18, 0x01	; 1
 466:	ae 01       	movw	r20, r28
 468:	4f 5f       	subi	r20, 0xFF	; 255
 46a:	5f 4f       	sbci	r21, 0xFF	; 255
 46c:	60 e0       	ldi	r22, 0x00	; 0
 46e:	81 e0       	ldi	r24, 0x01	; 1
 470:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 474:	2f ef       	ldi	r18, 0xFF	; 255
 476:	81 ee       	ldi	r24, 0xE1	; 225
 478:	94 e0       	ldi	r25, 0x04	; 4
 47a:	21 50       	subi	r18, 0x01	; 1
 47c:	80 40       	sbci	r24, 0x00	; 0
 47e:	90 40       	sbci	r25, 0x00	; 0
 480:	e1 f7       	brne	.-8      	; 0x47a <__stack+0x1b>
 482:	00 c0       	rjmp	.+0      	; 0x484 <__stack+0x25>
 484:	00 00       	nop
 486:	0f 90       	pop	r0
 488:	df 91       	pop	r29
 48a:	cf 91       	pop	r28
 48c:	08 95       	ret

0000048e <changeNrfToTX>:
 48e:	cf 93       	push	r28
 490:	df 93       	push	r29
 492:	1f 92       	push	r1
 494:	cd b7       	in	r28, 0x3d	; 61
 496:	de b7       	in	r29, 0x3e	; 62
 498:	8e e1       	ldi	r24, 0x1E	; 30
 49a:	89 83       	std	Y+1, r24	; 0x01
 49c:	21 e0       	ldi	r18, 0x01	; 1
 49e:	ae 01       	movw	r20, r28
 4a0:	4f 5f       	subi	r20, 0xFF	; 255
 4a2:	5f 4f       	sbci	r21, 0xFF	; 255
 4a4:	60 e0       	ldi	r22, 0x00	; 0
 4a6:	81 e0       	ldi	r24, 0x01	; 1
 4a8:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 4ac:	2f ef       	ldi	r18, 0xFF	; 255
 4ae:	81 ee       	ldi	r24, 0xE1	; 225
 4b0:	94 e0       	ldi	r25, 0x04	; 4
 4b2:	21 50       	subi	r18, 0x01	; 1
 4b4:	80 40       	sbci	r24, 0x00	; 0
 4b6:	90 40       	sbci	r25, 0x00	; 0
 4b8:	e1 f7       	brne	.-8      	; 0x4b2 <changeNrfToTX+0x24>
 4ba:	00 c0       	rjmp	.+0      	; 0x4bc <changeNrfToTX+0x2e>
 4bc:	00 00       	nop
 4be:	0f 90       	pop	r0
 4c0:	df 91       	pop	r29
 4c2:	cf 91       	pop	r28
 4c4:	08 95       	ret

000004c6 <CheckLightSwitches>:
 4c6:	cf 93       	push	r28
 4c8:	c9 b3       	in	r28, 0x19	; 25
 4ca:	c1 70       	andi	r28, 0x01	; 1
 4cc:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <lastSwitchState>
 4d0:	8c 17       	cp	r24, r28
 4d2:	21 f0       	breq	.+8      	; 0x4dc <CheckLightSwitches+0x16>
 4d4:	0e 94 49 00 	call	0x92	; 0x92 <ToggleLights.part.0>
 4d8:	c0 93 9c 00 	sts	0x009C, r28	; 0x80009c <lastSwitchState>
 4dc:	cf 91       	pop	r28
 4de:	08 95       	ret

000004e0 <SendAnswer>:
 4e0:	cf 93       	push	r28
 4e2:	df 93       	push	r29
 4e4:	ec 01       	movw	r28, r24
 4e6:	0e 94 de 01 	call	0x3bc	; 0x3bc <resetNrf>
 4ea:	0e 94 47 02 	call	0x48e	; 0x48e <changeNrfToTX>
 4ee:	ce 01       	movw	r24, r28
 4f0:	0e 94 f7 01 	call	0x3ee	; 0x3ee <transmit_data>
 4f4:	8f e8       	ldi	r24, 0x8F	; 143
 4f6:	91 e0       	ldi	r25, 0x01	; 1
 4f8:	01 97       	sbiw	r24, 0x01	; 1
 4fa:	f1 f7       	brne	.-4      	; 0x4f8 <SendAnswer+0x18>
 4fc:	00 c0       	rjmp	.+0      	; 0x4fe <SendAnswer+0x1e>
 4fe:	00 00       	nop
 500:	df 91       	pop	r29
 502:	cf 91       	pop	r28
 504:	0c 94 2b 02 	jmp	0x456	; 0x456 <changeNrfToRX>

00000508 <SendAnswerUntilReceived>:
 508:	cf 92       	push	r12
 50a:	df 92       	push	r13
 50c:	ef 92       	push	r14
 50e:	ff 92       	push	r15
 510:	0f 93       	push	r16
 512:	1f 93       	push	r17
 514:	cf 93       	push	r28
 516:	df 93       	push	r29
 518:	00 d0       	rcall	.+0      	; 0x51a <SendAnswerUntilReceived+0x12>
 51a:	00 d0       	rcall	.+0      	; 0x51c <SendAnswerUntilReceived+0x14>
 51c:	1f 92       	push	r1
 51e:	cd b7       	in	r28, 0x3d	; 61
 520:	de b7       	in	r29, 0x3e	; 62
 522:	08 2f       	mov	r16, r24
 524:	f6 2e       	mov	r15, r22
 526:	10 92 9b 00 	sts	0x009B, r1	; 0x80009b <successfullySend>
 52a:	1b e0       	ldi	r17, 0x0B	; 11
 52c:	81 e4       	ldi	r24, 0x41	; 65
 52e:	e8 2e       	mov	r14, r24
 530:	92 e4       	ldi	r25, 0x42	; 66
 532:	d9 2e       	mov	r13, r25
 534:	23 e4       	ldi	r18, 0x43	; 67
 536:	c2 2e       	mov	r12, r18
 538:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <successfullySend>
 53c:	81 30       	cpi	r24, 0x01	; 1
 53e:	71 f0       	breq	.+28     	; 0x55c <SendAnswerUntilReceived+0x54>
 540:	11 50       	subi	r17, 0x01	; 1
 542:	61 f0       	breq	.+24     	; 0x55c <SendAnswerUntilReceived+0x54>
 544:	e9 82       	std	Y+1, r14	; 0x01
 546:	da 82       	std	Y+2, r13	; 0x02
 548:	cb 82       	std	Y+3, r12	; 0x03
 54a:	fc 82       	std	Y+4, r15	; 0x04
 54c:	0d 83       	std	Y+5, r16	; 0x05
 54e:	ce 01       	movw	r24, r28
 550:	01 96       	adiw	r24, 0x01	; 1
 552:	0e 94 70 02 	call	0x4e0	; 0x4e0 <SendAnswer>
 556:	0e 94 1c 02 	call	0x438	; 0x438 <receive_data>
 55a:	ee cf       	rjmp	.-36     	; 0x538 <SendAnswerUntilReceived+0x30>
 55c:	10 92 9b 00 	sts	0x009B, r1	; 0x80009b <successfullySend>
 560:	0f 90       	pop	r0
 562:	0f 90       	pop	r0
 564:	0f 90       	pop	r0
 566:	0f 90       	pop	r0
 568:	0f 90       	pop	r0
 56a:	df 91       	pop	r29
 56c:	cf 91       	pop	r28
 56e:	1f 91       	pop	r17
 570:	0f 91       	pop	r16
 572:	ff 90       	pop	r15
 574:	ef 90       	pop	r14
 576:	df 90       	pop	r13
 578:	cf 90       	pop	r12
 57a:	08 95       	ret

0000057c <CheckPirSensor>:
 57c:	89 b3       	in	r24, 0x19	; 25
 57e:	68 2f       	mov	r22, r24
 580:	68 70       	andi	r22, 0x08	; 8
 582:	83 ff       	sbrs	r24, 3
 584:	07 c0       	rjmp	.+14     	; 0x594 <CheckPirSensor+0x18>
 586:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <PIR_Enabled>
 58a:	88 23       	and	r24, r24
 58c:	19 f0       	breq	.+6      	; 0x594 <CheckPirSensor+0x18>
 58e:	80 e3       	ldi	r24, 0x30	; 48
 590:	0c 94 84 02 	jmp	0x508	; 0x508 <SendAnswerUntilReceived>
 594:	08 95       	ret

00000596 <CheckRelays>:
 596:	cf 93       	push	r28
 598:	c9 b3       	in	r28, 0x19	; 25
 59a:	c2 70       	andi	r28, 0x02	; 2
 59c:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <lastRelay1State>
 5a0:	8c 17       	cp	r24, r28
 5a2:	31 f0       	breq	.+12     	; 0x5b0 <CheckRelays+0x1a>
 5a4:	6c 2f       	mov	r22, r28
 5a6:	81 ef       	ldi	r24, 0xF1	; 241
 5a8:	0e 94 84 02 	call	0x508	; 0x508 <SendAnswerUntilReceived>
 5ac:	c0 93 a2 00 	sts	0x00A2, r28	; 0x8000a2 <lastRelay1State>
 5b0:	cf 91       	pop	r28
 5b2:	08 95       	ret

000005b4 <Request>:
 5b4:	8e 9a       	sbi	0x11, 6	; 17
 5b6:	96 98       	cbi	0x12, 6	; 18
 5b8:	2f ef       	ldi	r18, 0xFF	; 255
 5ba:	89 ef       	ldi	r24, 0xF9	; 249
 5bc:	90 e0       	ldi	r25, 0x00	; 0
 5be:	21 50       	subi	r18, 0x01	; 1
 5c0:	80 40       	sbci	r24, 0x00	; 0
 5c2:	90 40       	sbci	r25, 0x00	; 0
 5c4:	e1 f7       	brne	.-8      	; 0x5be <Request+0xa>
 5c6:	00 c0       	rjmp	.+0      	; 0x5c8 <Request+0x14>
 5c8:	00 00       	nop
 5ca:	96 9a       	sbi	0x12, 6	; 18
 5cc:	08 95       	ret

000005ce <Response>:
 5ce:	8e 98       	cbi	0x11, 6	; 17
 5d0:	86 99       	sbic	0x10, 6	; 16
 5d2:	fe cf       	rjmp	.-4      	; 0x5d0 <Response+0x2>
 5d4:	86 9b       	sbis	0x10, 6	; 16
 5d6:	fe cf       	rjmp	.-4      	; 0x5d4 <Response+0x6>
 5d8:	86 99       	sbic	0x10, 6	; 16
 5da:	fe cf       	rjmp	.-4      	; 0x5d8 <Response+0xa>
 5dc:	08 95       	ret

000005de <Receive_data_DHT11>:
 5de:	28 e0       	ldi	r18, 0x08	; 8
 5e0:	30 e0       	ldi	r19, 0x00	; 0
 5e2:	86 9b       	sbis	0x10, 6	; 16
 5e4:	fe cf       	rjmp	.-4      	; 0x5e2 <Receive_data_DHT11+0x4>
 5e6:	80 ea       	ldi	r24, 0xA0	; 160
 5e8:	8a 95       	dec	r24
 5ea:	f1 f7       	brne	.-4      	; 0x5e8 <Receive_data_DHT11+0xa>
 5ec:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <temp>
 5f0:	88 0f       	add	r24, r24
 5f2:	86 99       	sbic	0x10, 6	; 16
 5f4:	81 60       	ori	r24, 0x01	; 1
 5f6:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <temp>
 5fa:	86 99       	sbic	0x10, 6	; 16
 5fc:	fe cf       	rjmp	.-4      	; 0x5fa <Receive_data_DHT11+0x1c>
 5fe:	21 50       	subi	r18, 0x01	; 1
 600:	31 09       	sbc	r19, r1
 602:	79 f7       	brne	.-34     	; 0x5e2 <Receive_data_DHT11+0x4>
 604:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <temp>
 608:	08 95       	ret

0000060a <SendDHT11Data>:
 60a:	cf 93       	push	r28
 60c:	df 93       	push	r29
 60e:	00 d0       	rcall	.+0      	; 0x610 <SendDHT11Data+0x6>
 610:	00 d0       	rcall	.+0      	; 0x612 <SendDHT11Data+0x8>
 612:	1f 92       	push	r1
 614:	cd b7       	in	r28, 0x3d	; 61
 616:	de b7       	in	r29, 0x3e	; 62
 618:	0e 94 da 02 	call	0x5b4	; 0x5b4 <Request>
 61c:	0e 94 e7 02 	call	0x5ce	; 0x5ce <Response>
 620:	0e 94 ef 02 	call	0x5de	; 0x5de <Receive_data_DHT11>
 624:	80 93 9e 00 	sts	0x009E, r24	; 0x80009e <humidity>
 628:	0e 94 ef 02 	call	0x5de	; 0x5de <Receive_data_DHT11>
 62c:	80 93 9f 00 	sts	0x009F, r24	; 0x80009f <D_RH>
 630:	0e 94 ef 02 	call	0x5de	; 0x5de <Receive_data_DHT11>
 634:	80 93 9d 00 	sts	0x009D, r24	; 0x80009d <temperature>
 638:	0e 94 ef 02 	call	0x5de	; 0x5de <Receive_data_DHT11>
 63c:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <D_Temp>
 640:	0e 94 ef 02 	call	0x5de	; 0x5de <Receive_data_DHT11>
 644:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <CheckSum>
 648:	80 91 9e 00 	lds	r24, 0x009E	; 0x80009e <humidity>
 64c:	90 91 9d 00 	lds	r25, 0x009D	; 0x80009d <temperature>
 650:	21 e4       	ldi	r18, 0x41	; 65
 652:	29 83       	std	Y+1, r18	; 0x01
 654:	22 e4       	ldi	r18, 0x42	; 66
 656:	2a 83       	std	Y+2, r18	; 0x02
 658:	23 e4       	ldi	r18, 0x43	; 67
 65a:	2b 83       	std	Y+3, r18	; 0x03
 65c:	9c 83       	std	Y+4, r25	; 0x04
 65e:	8d 83       	std	Y+5, r24	; 0x05
 660:	ce 01       	movw	r24, r28
 662:	01 96       	adiw	r24, 0x01	; 1
 664:	0e 94 70 02 	call	0x4e0	; 0x4e0 <SendAnswer>
 668:	2f ef       	ldi	r18, 0xFF	; 255
 66a:	85 eb       	ldi	r24, 0xB5	; 181
 66c:	95 e3       	ldi	r25, 0x35	; 53
 66e:	21 50       	subi	r18, 0x01	; 1
 670:	80 40       	sbci	r24, 0x00	; 0
 672:	90 40       	sbci	r25, 0x00	; 0
 674:	e1 f7       	brne	.-8      	; 0x66e <SendDHT11Data+0x64>
 676:	00 c0       	rjmp	.+0      	; 0x678 <SendDHT11Data+0x6e>
 678:	00 00       	nop
 67a:	0f 90       	pop	r0
 67c:	0f 90       	pop	r0
 67e:	0f 90       	pop	r0
 680:	0f 90       	pop	r0
 682:	0f 90       	pop	r0
 684:	df 91       	pop	r29
 686:	cf 91       	pop	r28
 688:	08 95       	ret

0000068a <__vector_1>:
 68a:	1f 92       	push	r1
 68c:	0f 92       	push	r0
 68e:	0f b6       	in	r0, 0x3f	; 63
 690:	0f 92       	push	r0
 692:	11 24       	eor	r1, r1
 694:	2f 93       	push	r18
 696:	3f 93       	push	r19
 698:	4f 93       	push	r20
 69a:	5f 93       	push	r21
 69c:	6f 93       	push	r22
 69e:	7f 93       	push	r23
 6a0:	8f 93       	push	r24
 6a2:	9f 93       	push	r25
 6a4:	af 93       	push	r26
 6a6:	bf 93       	push	r27
 6a8:	ef 93       	push	r30
 6aa:	ff 93       	push	r31
 6ac:	cf 93       	push	r28
 6ae:	df 93       	push	r29
 6b0:	cd b7       	in	r28, 0x3d	; 61
 6b2:	de b7       	in	r29, 0x3e	; 62
 6b4:	2a 97       	sbiw	r28, 0x0a	; 10
 6b6:	de bf       	out	0x3e, r29	; 62
 6b8:	cd bf       	out	0x3d, r28	; 61
 6ba:	85 e0       	ldi	r24, 0x05	; 5
 6bc:	e1 e6       	ldi	r30, 0x61	; 97
 6be:	f0 e0       	ldi	r31, 0x00	; 0
 6c0:	de 01       	movw	r26, r28
 6c2:	16 96       	adiw	r26, 0x06	; 6
 6c4:	01 90       	ld	r0, Z+
 6c6:	0d 92       	st	X+, r0
 6c8:	8a 95       	dec	r24
 6ca:	e1 f7       	brne	.-8      	; 0x6c4 <__vector_1+0x3a>
 6cc:	f8 94       	cli
 6ce:	c3 98       	cbi	0x18, 3	; 24
 6d0:	25 e0       	ldi	r18, 0x05	; 5
 6d2:	40 e0       	ldi	r20, 0x00	; 0
 6d4:	50 e0       	ldi	r21, 0x00	; 0
 6d6:	61 e6       	ldi	r22, 0x61	; 97
 6d8:	80 e0       	ldi	r24, 0x00	; 0
 6da:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 6de:	fc 01       	movw	r30, r24
 6e0:	84 81       	ldd	r24, Z+4	; 0x04
 6e2:	86 31       	cpi	r24, 0x16	; 22
 6e4:	09 f0       	breq	.+2      	; 0x6e8 <__vector_1+0x5e>
 6e6:	43 c0       	rjmp	.+134    	; 0x76e <__vector_1+0xe4>
 6e8:	93 81       	ldd	r25, Z+3	; 0x03
 6ea:	90 37       	cpi	r25, 0x70	; 112
 6ec:	19 f4       	brne	.+6      	; 0x6f4 <__vector_1+0x6a>
 6ee:	0e 94 05 03 	call	0x60a	; 0x60a <SendDHT11Data>
 6f2:	3d c0       	rjmp	.+122    	; 0x76e <__vector_1+0xe4>
 6f4:	96 36       	cpi	r25, 0x66	; 102
 6f6:	21 f4       	brne	.+8      	; 0x700 <__vector_1+0x76>
 6f8:	81 e0       	ldi	r24, 0x01	; 1
 6fa:	80 93 9b 00 	sts	0x009B, r24	; 0x80009b <successfullySend>
 6fe:	37 c0       	rjmp	.+110    	; 0x76e <__vector_1+0xe4>
 700:	91 35       	cpi	r25, 0x51	; 81
 702:	51 f4       	brne	.+20     	; 0x718 <__vector_1+0x8e>
 704:	82 81       	ldd	r24, Z+2	; 0x02
 706:	81 3f       	cpi	r24, 0xF1	; 241
 708:	91 f5       	brne	.+100    	; 0x76e <__vector_1+0xe4>
 70a:	0e 94 49 00 	call	0x92	; 0x92 <ToggleLights.part.0>
 70e:	89 b3       	in	r24, 0x19	; 25
 710:	82 70       	andi	r24, 0x02	; 2
 712:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <lastRelay1State>
 716:	2b c0       	rjmp	.+86     	; 0x76e <__vector_1+0xe4>
 718:	92 35       	cpi	r25, 0x52	; 82
 71a:	d9 f4       	brne	.+54     	; 0x752 <__vector_1+0xc8>
 71c:	82 81       	ldd	r24, Z+2	; 0x02
 71e:	81 3f       	cpi	r24, 0xF1	; 241
 720:	61 f4       	brne	.+24     	; 0x73a <__vector_1+0xb0>
 722:	89 b3       	in	r24, 0x19	; 25
 724:	91 e4       	ldi	r25, 0x41	; 65
 726:	99 83       	std	Y+1, r25	; 0x01
 728:	92 e4       	ldi	r25, 0x42	; 66
 72a:	9a 83       	std	Y+2, r25	; 0x02
 72c:	93 e4       	ldi	r25, 0x43	; 67
 72e:	9b 83       	std	Y+3, r25	; 0x03
 730:	94 e4       	ldi	r25, 0x44	; 68
 732:	9c 83       	std	Y+4, r25	; 0x04
 734:	82 70       	andi	r24, 0x02	; 2
 736:	8d 83       	std	Y+5, r24	; 0x05
 738:	09 c0       	rjmp	.+18     	; 0x74c <__vector_1+0xc2>
 73a:	85 e0       	ldi	r24, 0x05	; 5
 73c:	e6 e6       	ldi	r30, 0x66	; 102
 73e:	f0 e0       	ldi	r31, 0x00	; 0
 740:	de 01       	movw	r26, r28
 742:	11 96       	adiw	r26, 0x01	; 1
 744:	01 90       	ld	r0, Z+
 746:	0d 92       	st	X+, r0
 748:	8a 95       	dec	r24
 74a:	e1 f7       	brne	.-8      	; 0x744 <__vector_1+0xba>
 74c:	ce 01       	movw	r24, r28
 74e:	01 96       	adiw	r24, 0x01	; 1
 750:	0c c0       	rjmp	.+24     	; 0x76a <__vector_1+0xe0>
 752:	91 3a       	cpi	r25, 0xA1	; 161
 754:	19 f4       	brne	.+6      	; 0x75c <__vector_1+0xd2>
 756:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <PIR_Enabled>
 75a:	05 c0       	rjmp	.+10     	; 0x766 <__vector_1+0xdc>
 75c:	90 3a       	cpi	r25, 0xA0	; 160
 75e:	19 f4       	brne	.+6      	; 0x766 <__vector_1+0xdc>
 760:	81 e0       	ldi	r24, 0x01	; 1
 762:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <PIR_Enabled>
 766:	ce 01       	movw	r24, r28
 768:	06 96       	adiw	r24, 0x06	; 6
 76a:	0e 94 70 02 	call	0x4e0	; 0x4e0 <SendAnswer>
 76e:	78 94       	sei
 770:	2a 96       	adiw	r28, 0x0a	; 10
 772:	0f b6       	in	r0, 0x3f	; 63
 774:	f8 94       	cli
 776:	de bf       	out	0x3e, r29	; 62
 778:	0f be       	out	0x3f, r0	; 63
 77a:	cd bf       	out	0x3d, r28	; 61
 77c:	df 91       	pop	r29
 77e:	cf 91       	pop	r28
 780:	ff 91       	pop	r31
 782:	ef 91       	pop	r30
 784:	bf 91       	pop	r27
 786:	af 91       	pop	r26
 788:	9f 91       	pop	r25
 78a:	8f 91       	pop	r24
 78c:	7f 91       	pop	r23
 78e:	6f 91       	pop	r22
 790:	5f 91       	pop	r21
 792:	4f 91       	pop	r20
 794:	3f 91       	pop	r19
 796:	2f 91       	pop	r18
 798:	0f 90       	pop	r0
 79a:	0f be       	out	0x3f, r0	; 63
 79c:	0f 90       	pop	r0
 79e:	1f 90       	pop	r1
 7a0:	18 95       	reti

000007a2 <initRelays>:
 7a2:	d1 9a       	sbi	0x1a, 1	; 26
 7a4:	d9 98       	cbi	0x1b, 1	; 27
 7a6:	08 95       	ret

000007a8 <initPIRSensor>:
 7a8:	d3 98       	cbi	0x1a, 3	; 26
 7aa:	08 95       	ret

000007ac <initLightSwitch>:
 7ac:	d0 98       	cbi	0x1a, 0	; 26
 7ae:	d8 9a       	sbi	0x1b, 0	; 27
 7b0:	08 95       	ret

000007b2 <main>:
 7b2:	cf 93       	push	r28
 7b4:	df 93       	push	r29
 7b6:	cd b7       	in	r28, 0x3d	; 61
 7b8:	de b7       	in	r29, 0x3e	; 62
 7ba:	2a 97       	sbiw	r28, 0x0a	; 10
 7bc:	0f b6       	in	r0, 0x3f	; 63
 7be:	f8 94       	cli
 7c0:	de bf       	out	0x3e, r29	; 62
 7c2:	0f be       	out	0x3f, r0	; 63
 7c4:	cd bf       	out	0x3d, r28	; 61
 7c6:	b8 9a       	sbi	0x17, 0	; 23
 7c8:	c0 9a       	sbi	0x18, 0	; 24
 7ca:	0e 94 66 00 	call	0xcc	; 0xcc <Uart_Init>
 7ce:	0e 94 57 00 	call	0xae	; 0xae <spi_master_init>
 7d2:	85 e0       	ldi	r24, 0x05	; 5
 7d4:	eb e6       	ldi	r30, 0x6B	; 107
 7d6:	f0 e0       	ldi	r31, 0x00	; 0
 7d8:	de 01       	movw	r26, r28
 7da:	16 96       	adiw	r26, 0x06	; 6
 7dc:	01 90       	ld	r0, Z+
 7de:	0d 92       	st	X+, r0
 7e0:	8a 95       	dec	r24
 7e2:	e1 f7       	brne	.-8      	; 0x7dc <main+0x2a>
 7e4:	85 e0       	ldi	r24, 0x05	; 5
 7e6:	eb e6       	ldi	r30, 0x6B	; 107
 7e8:	f0 e0       	ldi	r31, 0x00	; 0
 7ea:	de 01       	movw	r26, r28
 7ec:	11 96       	adiw	r26, 0x01	; 1
 7ee:	01 90       	ld	r0, Z+
 7f0:	0d 92       	st	X+, r0
 7f2:	8a 95       	dec	r24
 7f4:	e1 f7       	brne	.-8      	; 0x7ee <main+0x3c>
 7f6:	22 e5       	ldi	r18, 0x52	; 82
 7f8:	ae 01       	movw	r20, r28
 7fa:	4f 5f       	subi	r20, 0xFF	; 255
 7fc:	5f 4f       	sbci	r21, 0xFF	; 255
 7fe:	be 01       	movw	r22, r28
 800:	6a 5f       	subi	r22, 0xFA	; 250
 802:	7f 4f       	sbci	r23, 0xFF	; 255
 804:	80 e0       	ldi	r24, 0x00	; 0
 806:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <Nrf24_init>
 80a:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <initRelays>
 80e:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <initPIRSensor>
 812:	0e 94 d6 03 	call	0x7ac	; 0x7ac <initLightSwitch>
 816:	0e 94 82 00 	call	0x104	; 0x104 <EnableExternalInterrupt0>
 81a:	0e 94 de 01 	call	0x3bc	; 0x3bc <resetNrf>
 81e:	80 e7       	ldi	r24, 0x70	; 112
 820:	90 e0       	ldi	r25, 0x00	; 0
 822:	0e 94 76 00 	call	0xec	; 0xec <Uart_Send_String>
 826:	89 b3       	in	r24, 0x19	; 25
 828:	82 70       	andi	r24, 0x02	; 2
 82a:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <lastRelay1State>
 82e:	89 b3       	in	r24, 0x19	; 25
 830:	81 70       	andi	r24, 0x01	; 1
 832:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <lastSwitchState>
 836:	0e 94 1c 02 	call	0x438	; 0x438 <receive_data>
 83a:	0e 94 63 02 	call	0x4c6	; 0x4c6 <CheckLightSwitches>
 83e:	0e 94 cb 02 	call	0x596	; 0x596 <CheckRelays>
 842:	0e 94 be 02 	call	0x57c	; 0x57c <CheckPirSensor>
 846:	f7 cf       	rjmp	.-18     	; 0x836 <main+0x84>

00000848 <_exit>:
 848:	f8 94       	cli

0000084a <__stop_program>:
 84a:	ff cf       	rjmp	.-2      	; 0x84a <__stop_program>
