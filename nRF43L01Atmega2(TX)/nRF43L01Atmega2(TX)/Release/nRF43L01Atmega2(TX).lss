
nRF43L01Atmega2(TX).elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000826  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001e  00800060  00000826  000008ba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000029  0080007e  0080007e  000008d8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000008d8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000908  2**2
                  CONTENTS, READONLY
  5 .debug_info   0000052e  00000000  00000000  00000944  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000004e7  00000000  00000000  00000e72  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000115  00000000  00000000  00001359  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000001af  00000000  00000000  0000146e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3a 03 	jmp	0x674	; 0x674 <__vector_1>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e2       	ldi	r30, 0x26	; 38
  68:	f8 e0       	ldi	r31, 0x08	; 8
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ae 37       	cpi	r26, 0x7E	; 126
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	ae e7       	ldi	r26, 0x7E	; 126
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a7 3a       	cpi	r26, 0xA7	; 167
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 c7 03 	call	0x78e	; 0x78e <main>
  8a:	0c 94 11 04 	jmp	0x822	; 0x822 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <ToggleLights.part.0>:
  92:	9b b3       	in	r25, 0x1b	; 27
  94:	82 e0       	ldi	r24, 0x02	; 2
  96:	89 27       	eor	r24, r25
  98:	8b bb       	out	0x1b, r24	; 27
  9a:	2f ef       	ldi	r18, 0xFF	; 255
  9c:	80 e7       	ldi	r24, 0x70	; 112
  9e:	92 e0       	ldi	r25, 0x02	; 2
  a0:	21 50       	subi	r18, 0x01	; 1
  a2:	80 40       	sbci	r24, 0x00	; 0
  a4:	90 40       	sbci	r25, 0x00	; 0
  a6:	e1 f7       	brne	.-8      	; 0xa0 <ToggleLights.part.0+0xe>
  a8:	00 c0       	rjmp	.+0      	; 0xaa <ToggleLights.part.0+0x18>
  aa:	00 00       	nop
  ac:	08 95       	ret

000000ae <spi_master_init>:
  ae:	87 b3       	in	r24, 0x17	; 23
  b0:	88 6b       	ori	r24, 0xB8	; 184
  b2:	87 bb       	out	0x17, r24	; 23
  b4:	be 98       	cbi	0x17, 6	; 23
  b6:	8d b1       	in	r24, 0x0d	; 13
  b8:	80 65       	ori	r24, 0x50	; 80
  ba:	8d b9       	out	0x0d, r24	; 13
  bc:	c4 9a       	sbi	0x18, 4	; 24
  be:	c3 98       	cbi	0x18, 3	; 24
  c0:	08 95       	ret

000000c2 <spi_Send_Receive>:
  c2:	8f b9       	out	0x0f, r24	; 15
  c4:	77 9b       	sbis	0x0e, 7	; 14
  c6:	fe cf       	rjmp	.-4      	; 0xc4 <spi_Send_Receive+0x2>
  c8:	8f b1       	in	r24, 0x0f	; 15
  ca:	08 95       	ret

000000cc <Uart_Init>:
  cc:	89 9a       	sbi	0x11, 1	; 17
  ce:	88 98       	cbi	0x11, 0	; 17
  d0:	10 bc       	out	0x20, r1	; 32
  d2:	87 e6       	ldi	r24, 0x67	; 103
  d4:	89 b9       	out	0x09, r24	; 9
  d6:	8a b1       	in	r24, 0x0a	; 10
  d8:	88 61       	ori	r24, 0x18	; 24
  da:	8a b9       	out	0x0a, r24	; 10
  dc:	80 b5       	in	r24, 0x20	; 32
  de:	86 68       	ori	r24, 0x86	; 134
  e0:	80 bd       	out	0x20, r24	; 32
  e2:	08 95       	ret

000000e4 <Uart_Transmit>:
  e4:	5d 9b       	sbis	0x0b, 5	; 11
  e6:	fe cf       	rjmp	.-4      	; 0xe4 <Uart_Transmit>
  e8:	8c b9       	out	0x0c, r24	; 12
  ea:	08 95       	ret

000000ec <Uart_Send_String>:
  ec:	cf 93       	push	r28
  ee:	df 93       	push	r29
  f0:	ec 01       	movw	r28, r24
  f2:	89 91       	ld	r24, Y+
  f4:	88 23       	and	r24, r24
  f6:	19 f0       	breq	.+6      	; 0xfe <Uart_Send_String+0x12>
  f8:	0e 94 72 00 	call	0xe4	; 0xe4 <Uart_Transmit>
  fc:	fa cf       	rjmp	.-12     	; 0xf2 <Uart_Send_String+0x6>
  fe:	df 91       	pop	r29
 100:	cf 91       	pop	r28
 102:	08 95       	ret

00000104 <EnableExternalInterrupt0>:
 104:	8a 98       	cbi	0x11, 2	; 17
 106:	8b b7       	in	r24, 0x3b	; 59
 108:	80 64       	ori	r24, 0x40	; 64
 10a:	8b bf       	out	0x3b, r24	; 59
 10c:	85 b7       	in	r24, 0x35	; 53
 10e:	82 60       	ori	r24, 0x02	; 2
 110:	85 bf       	out	0x35, r24	; 53
 112:	78 94       	sei
 114:	08 95       	ret

00000116 <ReadWriteNRF>:
 116:	cf 92       	push	r12
 118:	df 92       	push	r13
 11a:	ef 92       	push	r14
 11c:	ff 92       	push	r15
 11e:	0f 93       	push	r16
 120:	1f 93       	push	r17
 122:	cf 93       	push	r28
 124:	df 93       	push	r29
 126:	d8 2f       	mov	r29, r24
 128:	c6 2f       	mov	r28, r22
 12a:	7a 01       	movw	r14, r20
 12c:	c2 2e       	mov	r12, r18
 12e:	f8 94       	cli
 130:	81 30       	cpi	r24, 0x01	; 1
 132:	29 f4       	brne	.+10     	; 0x13e <ReadWriteNRF+0x28>
 134:	60 3a       	cpi	r22, 0xA0	; 160
 136:	19 f0       	breq	.+6      	; 0x13e <ReadWriteNRF+0x28>
 138:	61 3e       	cpi	r22, 0xE1	; 225
 13a:	09 f0       	breq	.+2      	; 0x13e <ReadWriteNRF+0x28>
 13c:	c0 5e       	subi	r28, 0xE0	; 224
 13e:	85 e3       	ldi	r24, 0x35	; 53
 140:	8a 95       	dec	r24
 142:	f1 f7       	brne	.-4      	; 0x140 <ReadWriteNRF+0x2a>
 144:	00 00       	nop
 146:	c4 98       	cbi	0x18, 4	; 24
 148:	e5 e3       	ldi	r30, 0x35	; 53
 14a:	ea 95       	dec	r30
 14c:	f1 f7       	brne	.-4      	; 0x14a <ReadWriteNRF+0x34>
 14e:	00 00       	nop
 150:	8c 2f       	mov	r24, r28
 152:	0e 94 61 00 	call	0xc2	; 0xc2 <spi_Send_Receive>
 156:	f5 e3       	ldi	r31, 0x35	; 53
 158:	fa 95       	dec	r31
 15a:	f1 f7       	brne	.-4      	; 0x158 <ReadWriteNRF+0x42>
 15c:	00 00       	nop
 15e:	87 01       	movw	r16, r14
 160:	8e e7       	ldi	r24, 0x7E	; 126
 162:	e8 2e       	mov	r14, r24
 164:	80 e0       	ldi	r24, 0x00	; 0
 166:	f8 2e       	mov	r15, r24
 168:	d1 2c       	mov	r13, r1
 16a:	c7 01       	movw	r24, r14
 16c:	8e 57       	subi	r24, 0x7E	; 126
 16e:	90 40       	sbci	r25, 0x00	; 0
 170:	8c 15       	cp	r24, r12
 172:	9d 05       	cpc	r25, r13
 174:	c4 f4       	brge	.+48     	; 0x1a6 <ReadWriteNRF+0x90>
 176:	d1 11       	cpse	r29, r1
 178:	08 c0       	rjmp	.+16     	; 0x18a <ReadWriteNRF+0x74>
 17a:	c0 3a       	cpi	r28, 0xA0	; 160
 17c:	31 f0       	breq	.+12     	; 0x18a <ReadWriteNRF+0x74>
 17e:	8f ef       	ldi	r24, 0xFF	; 255
 180:	0e 94 61 00 	call	0xc2	; 0xc2 <spi_Send_Receive>
 184:	f7 01       	movw	r30, r14
 186:	80 83       	st	Z, r24
 188:	04 c0       	rjmp	.+8      	; 0x192 <ReadWriteNRF+0x7c>
 18a:	f8 01       	movw	r30, r16
 18c:	80 81       	ld	r24, Z
 18e:	0e 94 61 00 	call	0xc2	; 0xc2 <spi_Send_Receive>
 192:	f5 e3       	ldi	r31, 0x35	; 53
 194:	fa 95       	dec	r31
 196:	f1 f7       	brne	.-4      	; 0x194 <ReadWriteNRF+0x7e>
 198:	00 00       	nop
 19a:	8f ef       	ldi	r24, 0xFF	; 255
 19c:	e8 1a       	sub	r14, r24
 19e:	f8 0a       	sbc	r15, r24
 1a0:	0f 5f       	subi	r16, 0xFF	; 255
 1a2:	1f 4f       	sbci	r17, 0xFF	; 255
 1a4:	e2 cf       	rjmp	.-60     	; 0x16a <ReadWriteNRF+0x54>
 1a6:	c4 9a       	sbi	0x18, 4	; 24
 1a8:	78 94       	sei
 1aa:	8e e7       	ldi	r24, 0x7E	; 126
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	df 91       	pop	r29
 1b0:	cf 91       	pop	r28
 1b2:	1f 91       	pop	r17
 1b4:	0f 91       	pop	r16
 1b6:	ff 90       	pop	r15
 1b8:	ef 90       	pop	r14
 1ba:	df 90       	pop	r13
 1bc:	cf 90       	pop	r12
 1be:	08 95       	ret

000001c0 <Nrf24_init>:
 1c0:	bf 92       	push	r11
 1c2:	cf 92       	push	r12
 1c4:	df 92       	push	r13
 1c6:	ef 92       	push	r14
 1c8:	ff 92       	push	r15
 1ca:	0f 93       	push	r16
 1cc:	1f 93       	push	r17
 1ce:	cf 93       	push	r28
 1d0:	df 93       	push	r29
 1d2:	00 d0       	rcall	.+0      	; 0x1d4 <Nrf24_init+0x14>
 1d4:	00 d0       	rcall	.+0      	; 0x1d6 <Nrf24_init+0x16>
 1d6:	1f 92       	push	r1
 1d8:	cd b7       	in	r28, 0x3d	; 61
 1da:	de b7       	in	r29, 0x3e	; 62
 1dc:	18 2f       	mov	r17, r24
 1de:	6b 01       	movw	r12, r22
 1e0:	7a 01       	movw	r14, r20
 1e2:	b2 2e       	mov	r11, r18
 1e4:	2f ef       	ldi	r18, 0xFF	; 255
 1e6:	81 ee       	ldi	r24, 0xE1	; 225
 1e8:	94 e0       	ldi	r25, 0x04	; 4
 1ea:	21 50       	subi	r18, 0x01	; 1
 1ec:	80 40       	sbci	r24, 0x00	; 0
 1ee:	90 40       	sbci	r25, 0x00	; 0
 1f0:	e1 f7       	brne	.-8      	; 0x1ea <Nrf24_init+0x2a>
 1f2:	00 c0       	rjmp	.+0      	; 0x1f4 <Nrf24_init+0x34>
 1f4:	00 00       	nop
 1f6:	01 e0       	ldi	r16, 0x01	; 1
 1f8:	01 0f       	add	r16, r17
 1fa:	09 83       	std	Y+1, r16	; 0x01
 1fc:	21 e0       	ldi	r18, 0x01	; 1
 1fe:	ae 01       	movw	r20, r28
 200:	4f 5f       	subi	r20, 0xFF	; 255
 202:	5f 4f       	sbci	r21, 0xFF	; 255
 204:	61 e0       	ldi	r22, 0x01	; 1
 206:	81 e0       	ldi	r24, 0x01	; 1
 208:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 20c:	8f e2       	ldi	r24, 0x2F	; 47
 20e:	89 83       	std	Y+1, r24	; 0x01
 210:	21 e0       	ldi	r18, 0x01	; 1
 212:	ae 01       	movw	r20, r28
 214:	4f 5f       	subi	r20, 0xFF	; 255
 216:	5f 4f       	sbci	r21, 0xFF	; 255
 218:	64 e0       	ldi	r22, 0x04	; 4
 21a:	81 e0       	ldi	r24, 0x01	; 1
 21c:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 220:	09 83       	std	Y+1, r16	; 0x01
 222:	21 e0       	ldi	r18, 0x01	; 1
 224:	ae 01       	movw	r20, r28
 226:	4f 5f       	subi	r20, 0xFF	; 255
 228:	5f 4f       	sbci	r21, 0xFF	; 255
 22a:	62 e0       	ldi	r22, 0x02	; 2
 22c:	81 e0       	ldi	r24, 0x01	; 1
 22e:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 232:	83 e0       	ldi	r24, 0x03	; 3
 234:	89 83       	std	Y+1, r24	; 0x01
 236:	21 e0       	ldi	r18, 0x01	; 1
 238:	ae 01       	movw	r20, r28
 23a:	4f 5f       	subi	r20, 0xFF	; 255
 23c:	5f 4f       	sbci	r21, 0xFF	; 255
 23e:	63 e0       	ldi	r22, 0x03	; 3
 240:	81 e0       	ldi	r24, 0x01	; 1
 242:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 246:	81 e0       	ldi	r24, 0x01	; 1
 248:	89 83       	std	Y+1, r24	; 0x01
 24a:	21 e0       	ldi	r18, 0x01	; 1
 24c:	ae 01       	movw	r20, r28
 24e:	4f 5f       	subi	r20, 0xFF	; 255
 250:	5f 4f       	sbci	r21, 0xFF	; 255
 252:	65 e0       	ldi	r22, 0x05	; 5
 254:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 258:	87 e0       	ldi	r24, 0x07	; 7
 25a:	89 83       	std	Y+1, r24	; 0x01
 25c:	21 e0       	ldi	r18, 0x01	; 1
 25e:	ae 01       	movw	r20, r28
 260:	4f 5f       	subi	r20, 0xFF	; 255
 262:	5f 4f       	sbci	r21, 0xFF	; 255
 264:	66 e0       	ldi	r22, 0x06	; 6
 266:	81 e0       	ldi	r24, 0x01	; 1
 268:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 26c:	85 e0       	ldi	r24, 0x05	; 5
 26e:	89 83       	std	Y+1, r24	; 0x01
 270:	12 30       	cpi	r17, 0x02	; 2
 272:	09 f4       	brne	.+2      	; 0x276 <Nrf24_init+0xb6>
 274:	43 c0       	rjmp	.+134    	; 0x2fc <Nrf24_init+0x13c>
 276:	b8 f4       	brcc	.+46     	; 0x2a6 <Nrf24_init+0xe6>
 278:	11 23       	and	r17, r17
 27a:	71 f1       	breq	.+92     	; 0x2d8 <Nrf24_init+0x118>
 27c:	11 30       	cpi	r17, 0x01	; 1
 27e:	09 f0       	breq	.+2      	; 0x282 <Nrf24_init+0xc2>
 280:	75 c0       	rjmp	.+234    	; 0x36c <Nrf24_init+0x1ac>
 282:	25 e0       	ldi	r18, 0x05	; 5
 284:	a6 01       	movw	r20, r12
 286:	6b e0       	ldi	r22, 0x0B	; 11
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 28e:	25 e0       	ldi	r18, 0x05	; 5
 290:	a7 01       	movw	r20, r14
 292:	60 e1       	ldi	r22, 0x10	; 16
 294:	81 e0       	ldi	r24, 0x01	; 1
 296:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 29a:	21 e0       	ldi	r18, 0x01	; 1
 29c:	ae 01       	movw	r20, r28
 29e:	4f 5f       	subi	r20, 0xFF	; 255
 2a0:	5f 4f       	sbci	r21, 0xFF	; 255
 2a2:	62 e1       	ldi	r22, 0x12	; 18
 2a4:	60 c0       	rjmp	.+192    	; 0x366 <Nrf24_init+0x1a6>
 2a6:	14 30       	cpi	r17, 0x04	; 4
 2a8:	09 f4       	brne	.+2      	; 0x2ac <Nrf24_init+0xec>
 2aa:	4c c0       	rjmp	.+152    	; 0x344 <Nrf24_init+0x184>
 2ac:	c8 f1       	brcs	.+114    	; 0x320 <Nrf24_init+0x160>
 2ae:	15 30       	cpi	r17, 0x05	; 5
 2b0:	09 f0       	breq	.+2      	; 0x2b4 <Nrf24_init+0xf4>
 2b2:	5c c0       	rjmp	.+184    	; 0x36c <Nrf24_init+0x1ac>
 2b4:	25 e0       	ldi	r18, 0x05	; 5
 2b6:	a6 01       	movw	r20, r12
 2b8:	6f e0       	ldi	r22, 0x0F	; 15
 2ba:	81 e0       	ldi	r24, 0x01	; 1
 2bc:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 2c0:	25 e0       	ldi	r18, 0x05	; 5
 2c2:	a7 01       	movw	r20, r14
 2c4:	60 e1       	ldi	r22, 0x10	; 16
 2c6:	81 e0       	ldi	r24, 0x01	; 1
 2c8:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 2cc:	21 e0       	ldi	r18, 0x01	; 1
 2ce:	ae 01       	movw	r20, r28
 2d0:	4f 5f       	subi	r20, 0xFF	; 255
 2d2:	5f 4f       	sbci	r21, 0xFF	; 255
 2d4:	66 e1       	ldi	r22, 0x16	; 22
 2d6:	47 c0       	rjmp	.+142    	; 0x366 <Nrf24_init+0x1a6>
 2d8:	25 e0       	ldi	r18, 0x05	; 5
 2da:	a6 01       	movw	r20, r12
 2dc:	6a e0       	ldi	r22, 0x0A	; 10
 2de:	81 e0       	ldi	r24, 0x01	; 1
 2e0:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 2e4:	25 e0       	ldi	r18, 0x05	; 5
 2e6:	a7 01       	movw	r20, r14
 2e8:	60 e1       	ldi	r22, 0x10	; 16
 2ea:	81 e0       	ldi	r24, 0x01	; 1
 2ec:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 2f0:	21 e0       	ldi	r18, 0x01	; 1
 2f2:	ae 01       	movw	r20, r28
 2f4:	4f 5f       	subi	r20, 0xFF	; 255
 2f6:	5f 4f       	sbci	r21, 0xFF	; 255
 2f8:	61 e1       	ldi	r22, 0x11	; 17
 2fa:	35 c0       	rjmp	.+106    	; 0x366 <Nrf24_init+0x1a6>
 2fc:	25 e0       	ldi	r18, 0x05	; 5
 2fe:	a6 01       	movw	r20, r12
 300:	6c e0       	ldi	r22, 0x0C	; 12
 302:	81 e0       	ldi	r24, 0x01	; 1
 304:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 308:	25 e0       	ldi	r18, 0x05	; 5
 30a:	a7 01       	movw	r20, r14
 30c:	60 e1       	ldi	r22, 0x10	; 16
 30e:	81 e0       	ldi	r24, 0x01	; 1
 310:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 314:	21 e0       	ldi	r18, 0x01	; 1
 316:	ae 01       	movw	r20, r28
 318:	4f 5f       	subi	r20, 0xFF	; 255
 31a:	5f 4f       	sbci	r21, 0xFF	; 255
 31c:	63 e1       	ldi	r22, 0x13	; 19
 31e:	23 c0       	rjmp	.+70     	; 0x366 <Nrf24_init+0x1a6>
 320:	25 e0       	ldi	r18, 0x05	; 5
 322:	a6 01       	movw	r20, r12
 324:	6d e0       	ldi	r22, 0x0D	; 13
 326:	81 e0       	ldi	r24, 0x01	; 1
 328:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 32c:	25 e0       	ldi	r18, 0x05	; 5
 32e:	a7 01       	movw	r20, r14
 330:	60 e1       	ldi	r22, 0x10	; 16
 332:	81 e0       	ldi	r24, 0x01	; 1
 334:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 338:	21 e0       	ldi	r18, 0x01	; 1
 33a:	ae 01       	movw	r20, r28
 33c:	4f 5f       	subi	r20, 0xFF	; 255
 33e:	5f 4f       	sbci	r21, 0xFF	; 255
 340:	64 e1       	ldi	r22, 0x14	; 20
 342:	11 c0       	rjmp	.+34     	; 0x366 <Nrf24_init+0x1a6>
 344:	25 e0       	ldi	r18, 0x05	; 5
 346:	a6 01       	movw	r20, r12
 348:	6e e0       	ldi	r22, 0x0E	; 14
 34a:	81 e0       	ldi	r24, 0x01	; 1
 34c:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 350:	25 e0       	ldi	r18, 0x05	; 5
 352:	a7 01       	movw	r20, r14
 354:	60 e1       	ldi	r22, 0x10	; 16
 356:	81 e0       	ldi	r24, 0x01	; 1
 358:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 35c:	21 e0       	ldi	r18, 0x01	; 1
 35e:	ae 01       	movw	r20, r28
 360:	4f 5f       	subi	r20, 0xFF	; 255
 362:	5f 4f       	sbci	r21, 0xFF	; 255
 364:	65 e1       	ldi	r22, 0x15	; 21
 366:	81 e0       	ldi	r24, 0x01	; 1
 368:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 36c:	24 e5       	ldi	r18, 0x54	; 84
 36e:	b2 12       	cpse	r11, r18
 370:	02 c0       	rjmp	.+4      	; 0x376 <Nrf24_init+0x1b6>
 372:	8e e1       	ldi	r24, 0x1E	; 30
 374:	01 c0       	rjmp	.+2      	; 0x378 <Nrf24_init+0x1b8>
 376:	8f e1       	ldi	r24, 0x1F	; 31
 378:	89 83       	std	Y+1, r24	; 0x01
 37a:	21 e0       	ldi	r18, 0x01	; 1
 37c:	ae 01       	movw	r20, r28
 37e:	4f 5f       	subi	r20, 0xFF	; 255
 380:	5f 4f       	sbci	r21, 0xFF	; 255
 382:	60 e0       	ldi	r22, 0x00	; 0
 384:	81 e0       	ldi	r24, 0x01	; 1
 386:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 38a:	8f ef       	ldi	r24, 0xFF	; 255
 38c:	91 ee       	ldi	r25, 0xE1	; 225
 38e:	24 e0       	ldi	r18, 0x04	; 4
 390:	81 50       	subi	r24, 0x01	; 1
 392:	90 40       	sbci	r25, 0x00	; 0
 394:	20 40       	sbci	r18, 0x00	; 0
 396:	e1 f7       	brne	.-8      	; 0x390 <Nrf24_init+0x1d0>
 398:	00 c0       	rjmp	.+0      	; 0x39a <Nrf24_init+0x1da>
 39a:	00 00       	nop
 39c:	0f 90       	pop	r0
 39e:	0f 90       	pop	r0
 3a0:	0f 90       	pop	r0
 3a2:	0f 90       	pop	r0
 3a4:	0f 90       	pop	r0
 3a6:	df 91       	pop	r29
 3a8:	cf 91       	pop	r28
 3aa:	1f 91       	pop	r17
 3ac:	0f 91       	pop	r16
 3ae:	ff 90       	pop	r15
 3b0:	ef 90       	pop	r14
 3b2:	df 90       	pop	r13
 3b4:	cf 90       	pop	r12
 3b6:	bf 90       	pop	r11
 3b8:	08 95       	ret

000003ba <resetNrf>:
 3ba:	85 e3       	ldi	r24, 0x35	; 53
 3bc:	8a 95       	dec	r24
 3be:	f1 f7       	brne	.-4      	; 0x3bc <resetNrf+0x2>
 3c0:	00 00       	nop
 3c2:	c4 98       	cbi	0x18, 4	; 24
 3c4:	85 e3       	ldi	r24, 0x35	; 53
 3c6:	8a 95       	dec	r24
 3c8:	f1 f7       	brne	.-4      	; 0x3c6 <resetNrf+0xc>
 3ca:	00 00       	nop
 3cc:	87 e2       	ldi	r24, 0x27	; 39
 3ce:	0e 94 61 00 	call	0xc2	; 0xc2 <spi_Send_Receive>
 3d2:	85 e3       	ldi	r24, 0x35	; 53
 3d4:	8a 95       	dec	r24
 3d6:	f1 f7       	brne	.-4      	; 0x3d4 <resetNrf+0x1a>
 3d8:	00 00       	nop
 3da:	80 e7       	ldi	r24, 0x70	; 112
 3dc:	0e 94 61 00 	call	0xc2	; 0xc2 <spi_Send_Receive>
 3e0:	85 e3       	ldi	r24, 0x35	; 53
 3e2:	8a 95       	dec	r24
 3e4:	f1 f7       	brne	.-4      	; 0x3e2 <resetNrf+0x28>
 3e6:	00 00       	nop
 3e8:	c4 9a       	sbi	0x18, 4	; 24
 3ea:	08 95       	ret

000003ec <transmit_data>:
 3ec:	cf 93       	push	r28
 3ee:	df 93       	push	r29
 3f0:	ec 01       	movw	r28, r24
 3f2:	20 e0       	ldi	r18, 0x00	; 0
 3f4:	ac 01       	movw	r20, r24
 3f6:	61 ee       	ldi	r22, 0xE1	; 225
 3f8:	80 e0       	ldi	r24, 0x00	; 0
 3fa:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 3fe:	25 e0       	ldi	r18, 0x05	; 5
 400:	ae 01       	movw	r20, r28
 402:	60 ea       	ldi	r22, 0xA0	; 160
 404:	80 e0       	ldi	r24, 0x00	; 0
 406:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 40a:	8f e3       	ldi	r24, 0x3F	; 63
 40c:	9c e9       	ldi	r25, 0x9C	; 156
 40e:	01 97       	sbiw	r24, 0x01	; 1
 410:	f1 f7       	brne	.-4      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 412:	00 c0       	rjmp	.+0      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 414:	00 00       	nop
 416:	c3 9a       	sbi	0x18, 3	; 24
 418:	87 ec       	ldi	r24, 0xC7	; 199
 41a:	90 e0       	ldi	r25, 0x00	; 0
 41c:	01 97       	sbiw	r24, 0x01	; 1
 41e:	f1 f7       	brne	.-4      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 420:	00 c0       	rjmp	.+0      	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 422:	00 00       	nop
 424:	c3 98       	cbi	0x18, 3	; 24
 426:	95 e3       	ldi	r25, 0x35	; 53
 428:	9a 95       	dec	r25
 42a:	f1 f7       	brne	.-4      	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 42c:	00 00       	nop
 42e:	df 91       	pop	r29
 430:	cf 91       	pop	r28
 432:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <resetNrf>

00000436 <receive_data>:
 436:	78 94       	sei
 438:	c3 9a       	sbi	0x18, 3	; 24
 43a:	2f ef       	ldi	r18, 0xFF	; 255
 43c:	83 ed       	ldi	r24, 0xD3	; 211
 43e:	90 e3       	ldi	r25, 0x30	; 48
 440:	21 50       	subi	r18, 0x01	; 1
 442:	80 40       	sbci	r24, 0x00	; 0
 444:	90 40       	sbci	r25, 0x00	; 0
 446:	e1 f7       	brne	.-8      	; 0x440 <receive_data+0xa>
 448:	00 c0       	rjmp	.+0      	; 0x44a <receive_data+0x14>
 44a:	00 00       	nop
 44c:	c3 98       	cbi	0x18, 3	; 24
 44e:	f8 94       	cli
 450:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <resetNrf>

00000454 <changeNrfToRX>:
 454:	cf 93       	push	r28
 456:	df 93       	push	r29
 458:	1f 92       	push	r1
 45a:	cd b7       	in	r28, 0x3d	; 61
 45c:	de b7       	in	r29, 0x3e	; 62
 45e:	8f e1       	ldi	r24, 0x1F	; 31
 460:	89 83       	std	Y+1, r24	; 0x01
 462:	21 e0       	ldi	r18, 0x01	; 1
 464:	ae 01       	movw	r20, r28
 466:	4f 5f       	subi	r20, 0xFF	; 255
 468:	5f 4f       	sbci	r21, 0xFF	; 255
 46a:	60 e0       	ldi	r22, 0x00	; 0
 46c:	81 e0       	ldi	r24, 0x01	; 1
 46e:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 472:	2f ef       	ldi	r18, 0xFF	; 255
 474:	81 ee       	ldi	r24, 0xE1	; 225
 476:	94 e0       	ldi	r25, 0x04	; 4
 478:	21 50       	subi	r18, 0x01	; 1
 47a:	80 40       	sbci	r24, 0x00	; 0
 47c:	90 40       	sbci	r25, 0x00	; 0
 47e:	e1 f7       	brne	.-8      	; 0x478 <__stack+0x19>
 480:	00 c0       	rjmp	.+0      	; 0x482 <__stack+0x23>
 482:	00 00       	nop
 484:	0f 90       	pop	r0
 486:	df 91       	pop	r29
 488:	cf 91       	pop	r28
 48a:	08 95       	ret

0000048c <changeNrfToTX>:
 48c:	cf 93       	push	r28
 48e:	df 93       	push	r29
 490:	1f 92       	push	r1
 492:	cd b7       	in	r28, 0x3d	; 61
 494:	de b7       	in	r29, 0x3e	; 62
 496:	8e e1       	ldi	r24, 0x1E	; 30
 498:	89 83       	std	Y+1, r24	; 0x01
 49a:	21 e0       	ldi	r18, 0x01	; 1
 49c:	ae 01       	movw	r20, r28
 49e:	4f 5f       	subi	r20, 0xFF	; 255
 4a0:	5f 4f       	sbci	r21, 0xFF	; 255
 4a2:	60 e0       	ldi	r22, 0x00	; 0
 4a4:	81 e0       	ldi	r24, 0x01	; 1
 4a6:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 4aa:	2f ef       	ldi	r18, 0xFF	; 255
 4ac:	81 ee       	ldi	r24, 0xE1	; 225
 4ae:	94 e0       	ldi	r25, 0x04	; 4
 4b0:	21 50       	subi	r18, 0x01	; 1
 4b2:	80 40       	sbci	r24, 0x00	; 0
 4b4:	90 40       	sbci	r25, 0x00	; 0
 4b6:	e1 f7       	brne	.-8      	; 0x4b0 <changeNrfToTX+0x24>
 4b8:	00 c0       	rjmp	.+0      	; 0x4ba <changeNrfToTX+0x2e>
 4ba:	00 00       	nop
 4bc:	0f 90       	pop	r0
 4be:	df 91       	pop	r29
 4c0:	cf 91       	pop	r28
 4c2:	08 95       	ret

000004c4 <CheckLightSwitches>:
 4c4:	cf 93       	push	r28
 4c6:	c9 b3       	in	r28, 0x19	; 25
 4c8:	c1 70       	andi	r28, 0x01	; 1
 4ca:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <lastSwitchState>
 4ce:	c8 17       	cp	r28, r24
 4d0:	21 f0       	breq	.+8      	; 0x4da <CheckLightSwitches+0x16>
 4d2:	0e 94 49 00 	call	0x92	; 0x92 <ToggleLights.part.0>
 4d6:	c0 93 a0 00 	sts	0x00A0, r28	; 0x8000a0 <lastSwitchState>
 4da:	cf 91       	pop	r28
 4dc:	08 95       	ret

000004de <SendAnswer>:
 4de:	cf 93       	push	r28
 4e0:	df 93       	push	r29
 4e2:	ec 01       	movw	r28, r24
 4e4:	0e 94 dd 01 	call	0x3ba	; 0x3ba <resetNrf>
 4e8:	0e 94 46 02 	call	0x48c	; 0x48c <changeNrfToTX>
 4ec:	ce 01       	movw	r24, r28
 4ee:	0e 94 f6 01 	call	0x3ec	; 0x3ec <transmit_data>
 4f2:	8f e8       	ldi	r24, 0x8F	; 143
 4f4:	91 e0       	ldi	r25, 0x01	; 1
 4f6:	01 97       	sbiw	r24, 0x01	; 1
 4f8:	f1 f7       	brne	.-4      	; 0x4f6 <SendAnswer+0x18>
 4fa:	00 c0       	rjmp	.+0      	; 0x4fc <SendAnswer+0x1e>
 4fc:	00 00       	nop
 4fe:	df 91       	pop	r29
 500:	cf 91       	pop	r28
 502:	0c 94 2a 02 	jmp	0x454	; 0x454 <changeNrfToRX>

00000506 <SendAnswerUntilReceived>:
 506:	cf 92       	push	r12
 508:	df 92       	push	r13
 50a:	ef 92       	push	r14
 50c:	ff 92       	push	r15
 50e:	0f 93       	push	r16
 510:	1f 93       	push	r17
 512:	cf 93       	push	r28
 514:	df 93       	push	r29
 516:	00 d0       	rcall	.+0      	; 0x518 <SendAnswerUntilReceived+0x12>
 518:	00 d0       	rcall	.+0      	; 0x51a <SendAnswerUntilReceived+0x14>
 51a:	1f 92       	push	r1
 51c:	cd b7       	in	r28, 0x3d	; 61
 51e:	de b7       	in	r29, 0x3e	; 62
 520:	08 2f       	mov	r16, r24
 522:	f6 2e       	mov	r15, r22
 524:	10 92 9f 00 	sts	0x009F, r1	; 0x80009f <successfullySend>
 528:	1b e0       	ldi	r17, 0x0B	; 11
 52a:	81 e4       	ldi	r24, 0x41	; 65
 52c:	e8 2e       	mov	r14, r24
 52e:	92 e4       	ldi	r25, 0x42	; 66
 530:	d9 2e       	mov	r13, r25
 532:	23 e4       	ldi	r18, 0x43	; 67
 534:	c2 2e       	mov	r12, r18
 536:	80 91 9f 00 	lds	r24, 0x009F	; 0x80009f <successfullySend>
 53a:	81 30       	cpi	r24, 0x01	; 1
 53c:	71 f0       	breq	.+28     	; 0x55a <SendAnswerUntilReceived+0x54>
 53e:	11 50       	subi	r17, 0x01	; 1
 540:	61 f0       	breq	.+24     	; 0x55a <SendAnswerUntilReceived+0x54>
 542:	e9 82       	std	Y+1, r14	; 0x01
 544:	da 82       	std	Y+2, r13	; 0x02
 546:	cb 82       	std	Y+3, r12	; 0x03
 548:	fc 82       	std	Y+4, r15	; 0x04
 54a:	0d 83       	std	Y+5, r16	; 0x05
 54c:	ce 01       	movw	r24, r28
 54e:	01 96       	adiw	r24, 0x01	; 1
 550:	0e 94 6f 02 	call	0x4de	; 0x4de <SendAnswer>
 554:	0e 94 1b 02 	call	0x436	; 0x436 <receive_data>
 558:	ee cf       	rjmp	.-36     	; 0x536 <SendAnswerUntilReceived+0x30>
 55a:	10 92 9f 00 	sts	0x009F, r1	; 0x80009f <successfullySend>
 55e:	0f 90       	pop	r0
 560:	0f 90       	pop	r0
 562:	0f 90       	pop	r0
 564:	0f 90       	pop	r0
 566:	0f 90       	pop	r0
 568:	df 91       	pop	r29
 56a:	cf 91       	pop	r28
 56c:	1f 91       	pop	r17
 56e:	0f 91       	pop	r16
 570:	ff 90       	pop	r15
 572:	ef 90       	pop	r14
 574:	df 90       	pop	r13
 576:	cf 90       	pop	r12
 578:	08 95       	ret

0000057a <CheckRelays>:
 57a:	cf 93       	push	r28
 57c:	c9 b3       	in	r28, 0x19	; 25
 57e:	c6 95       	lsr	r28
 580:	c1 70       	andi	r28, 0x01	; 1
 582:	80 91 a6 00 	lds	r24, 0x00A6	; 0x8000a6 <lastRelay1State>
 586:	8c 17       	cp	r24, r28
 588:	41 f0       	breq	.+16     	; 0x59a <CheckRelays+0x20>
 58a:	69 b3       	in	r22, 0x19	; 25
 58c:	66 95       	lsr	r22
 58e:	61 70       	andi	r22, 0x01	; 1
 590:	81 ef       	ldi	r24, 0xF1	; 241
 592:	0e 94 83 02 	call	0x506	; 0x506 <SendAnswerUntilReceived>
 596:	c0 93 a6 00 	sts	0x00A6, r28	; 0x8000a6 <lastRelay1State>
 59a:	cf 91       	pop	r28
 59c:	08 95       	ret

0000059e <Request>:
 59e:	8e 9a       	sbi	0x11, 6	; 17
 5a0:	96 98       	cbi	0x12, 6	; 18
 5a2:	2f ef       	ldi	r18, 0xFF	; 255
 5a4:	89 ef       	ldi	r24, 0xF9	; 249
 5a6:	90 e0       	ldi	r25, 0x00	; 0
 5a8:	21 50       	subi	r18, 0x01	; 1
 5aa:	80 40       	sbci	r24, 0x00	; 0
 5ac:	90 40       	sbci	r25, 0x00	; 0
 5ae:	e1 f7       	brne	.-8      	; 0x5a8 <Request+0xa>
 5b0:	00 c0       	rjmp	.+0      	; 0x5b2 <Request+0x14>
 5b2:	00 00       	nop
 5b4:	96 9a       	sbi	0x12, 6	; 18
 5b6:	08 95       	ret

000005b8 <Response>:
 5b8:	8e 98       	cbi	0x11, 6	; 17
 5ba:	86 99       	sbic	0x10, 6	; 16
 5bc:	fe cf       	rjmp	.-4      	; 0x5ba <Response+0x2>
 5be:	86 9b       	sbis	0x10, 6	; 16
 5c0:	fe cf       	rjmp	.-4      	; 0x5be <Response+0x6>
 5c2:	86 99       	sbic	0x10, 6	; 16
 5c4:	fe cf       	rjmp	.-4      	; 0x5c2 <Response+0xa>
 5c6:	08 95       	ret

000005c8 <Receive_data_DHT11>:
 5c8:	28 e0       	ldi	r18, 0x08	; 8
 5ca:	30 e0       	ldi	r19, 0x00	; 0
 5cc:	86 9b       	sbis	0x10, 6	; 16
 5ce:	fe cf       	rjmp	.-4      	; 0x5cc <Receive_data_DHT11+0x4>
 5d0:	80 ea       	ldi	r24, 0xA0	; 160
 5d2:	8a 95       	dec	r24
 5d4:	f1 f7       	brne	.-4      	; 0x5d2 <Receive_data_DHT11+0xa>
 5d6:	80 91 9e 00 	lds	r24, 0x009E	; 0x80009e <temp>
 5da:	88 0f       	add	r24, r24
 5dc:	86 99       	sbic	0x10, 6	; 16
 5de:	81 60       	ori	r24, 0x01	; 1
 5e0:	80 93 9e 00 	sts	0x009E, r24	; 0x80009e <temp>
 5e4:	86 99       	sbic	0x10, 6	; 16
 5e6:	fe cf       	rjmp	.-4      	; 0x5e4 <Receive_data_DHT11+0x1c>
 5e8:	21 50       	subi	r18, 0x01	; 1
 5ea:	31 09       	sbc	r19, r1
 5ec:	79 f7       	brne	.-34     	; 0x5cc <Receive_data_DHT11+0x4>
 5ee:	80 91 9e 00 	lds	r24, 0x009E	; 0x80009e <temp>
 5f2:	08 95       	ret

000005f4 <SendDHT11Data>:
 5f4:	cf 93       	push	r28
 5f6:	df 93       	push	r29
 5f8:	00 d0       	rcall	.+0      	; 0x5fa <SendDHT11Data+0x6>
 5fa:	00 d0       	rcall	.+0      	; 0x5fc <SendDHT11Data+0x8>
 5fc:	1f 92       	push	r1
 5fe:	cd b7       	in	r28, 0x3d	; 61
 600:	de b7       	in	r29, 0x3e	; 62
 602:	0e 94 cf 02 	call	0x59e	; 0x59e <Request>
 606:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <Response>
 60a:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <Receive_data_DHT11>
 60e:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <humidity>
 612:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <Receive_data_DHT11>
 616:	80 93 a3 00 	sts	0x00A3, r24	; 0x8000a3 <D_RH>
 61a:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <Receive_data_DHT11>
 61e:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <temperature>
 622:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <Receive_data_DHT11>
 626:	80 93 a5 00 	sts	0x00A5, r24	; 0x8000a5 <D_Temp>
 62a:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <Receive_data_DHT11>
 62e:	80 93 a4 00 	sts	0x00A4, r24	; 0x8000a4 <CheckSum>
 632:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <humidity>
 636:	90 91 a1 00 	lds	r25, 0x00A1	; 0x8000a1 <temperature>
 63a:	21 e4       	ldi	r18, 0x41	; 65
 63c:	29 83       	std	Y+1, r18	; 0x01
 63e:	22 e4       	ldi	r18, 0x42	; 66
 640:	2a 83       	std	Y+2, r18	; 0x02
 642:	23 e4       	ldi	r18, 0x43	; 67
 644:	2b 83       	std	Y+3, r18	; 0x03
 646:	9c 83       	std	Y+4, r25	; 0x04
 648:	8d 83       	std	Y+5, r24	; 0x05
 64a:	ce 01       	movw	r24, r28
 64c:	01 96       	adiw	r24, 0x01	; 1
 64e:	0e 94 6f 02 	call	0x4de	; 0x4de <SendAnswer>
 652:	2f ef       	ldi	r18, 0xFF	; 255
 654:	85 eb       	ldi	r24, 0xB5	; 181
 656:	95 e3       	ldi	r25, 0x35	; 53
 658:	21 50       	subi	r18, 0x01	; 1
 65a:	80 40       	sbci	r24, 0x00	; 0
 65c:	90 40       	sbci	r25, 0x00	; 0
 65e:	e1 f7       	brne	.-8      	; 0x658 <SendDHT11Data+0x64>
 660:	00 c0       	rjmp	.+0      	; 0x662 <SendDHT11Data+0x6e>
 662:	00 00       	nop
 664:	0f 90       	pop	r0
 666:	0f 90       	pop	r0
 668:	0f 90       	pop	r0
 66a:	0f 90       	pop	r0
 66c:	0f 90       	pop	r0
 66e:	df 91       	pop	r29
 670:	cf 91       	pop	r28
 672:	08 95       	ret

00000674 <__vector_1>:
 674:	1f 92       	push	r1
 676:	0f 92       	push	r0
 678:	0f b6       	in	r0, 0x3f	; 63
 67a:	0f 92       	push	r0
 67c:	11 24       	eor	r1, r1
 67e:	0f 93       	push	r16
 680:	1f 93       	push	r17
 682:	2f 93       	push	r18
 684:	3f 93       	push	r19
 686:	4f 93       	push	r20
 688:	5f 93       	push	r21
 68a:	6f 93       	push	r22
 68c:	7f 93       	push	r23
 68e:	8f 93       	push	r24
 690:	9f 93       	push	r25
 692:	af 93       	push	r26
 694:	bf 93       	push	r27
 696:	ef 93       	push	r30
 698:	ff 93       	push	r31
 69a:	cf 93       	push	r28
 69c:	df 93       	push	r29
 69e:	cd b7       	in	r28, 0x3d	; 61
 6a0:	de b7       	in	r29, 0x3e	; 62
 6a2:	2a 97       	sbiw	r28, 0x0a	; 10
 6a4:	de bf       	out	0x3e, r29	; 62
 6a6:	cd bf       	out	0x3d, r28	; 61
 6a8:	85 e0       	ldi	r24, 0x05	; 5
 6aa:	e0 e6       	ldi	r30, 0x60	; 96
 6ac:	f0 e0       	ldi	r31, 0x00	; 0
 6ae:	de 01       	movw	r26, r28
 6b0:	16 96       	adiw	r26, 0x06	; 6
 6b2:	01 90       	ld	r0, Z+
 6b4:	0d 92       	st	X+, r0
 6b6:	8a 95       	dec	r24
 6b8:	e1 f7       	brne	.-8      	; 0x6b2 <__vector_1+0x3e>
 6ba:	f8 94       	cli
 6bc:	c3 98       	cbi	0x18, 3	; 24
 6be:	25 e0       	ldi	r18, 0x05	; 5
 6c0:	40 e0       	ldi	r20, 0x00	; 0
 6c2:	50 e0       	ldi	r21, 0x00	; 0
 6c4:	61 e6       	ldi	r22, 0x61	; 97
 6c6:	80 e0       	ldi	r24, 0x00	; 0
 6c8:	0e 94 8b 00 	call	0x116	; 0x116 <ReadWriteNRF>
 6cc:	8c 01       	movw	r16, r24
 6ce:	fc 01       	movw	r30, r24
 6d0:	84 81       	ldd	r24, Z+4	; 0x04
 6d2:	86 31       	cpi	r24, 0x16	; 22
 6d4:	c1 f5       	brne	.+112    	; 0x746 <__vector_1+0xd2>
 6d6:	8a e6       	ldi	r24, 0x6A	; 106
 6d8:	90 e0       	ldi	r25, 0x00	; 0
 6da:	0e 94 76 00 	call	0xec	; 0xec <Uart_Send_String>
 6de:	f8 01       	movw	r30, r16
 6e0:	83 81       	ldd	r24, Z+3	; 0x03
 6e2:	80 37       	cpi	r24, 0x70	; 112
 6e4:	19 f4       	brne	.+6      	; 0x6ec <__vector_1+0x78>
 6e6:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <SendDHT11Data>
 6ea:	2d c0       	rjmp	.+90     	; 0x746 <__vector_1+0xd2>
 6ec:	86 36       	cpi	r24, 0x66	; 102
 6ee:	21 f4       	brne	.+8      	; 0x6f8 <__vector_1+0x84>
 6f0:	81 e0       	ldi	r24, 0x01	; 1
 6f2:	80 93 9f 00 	sts	0x009F, r24	; 0x80009f <successfullySend>
 6f6:	27 c0       	rjmp	.+78     	; 0x746 <__vector_1+0xd2>
 6f8:	81 35       	cpi	r24, 0x51	; 81
 6fa:	61 f4       	brne	.+24     	; 0x714 <__vector_1+0xa0>
 6fc:	f8 01       	movw	r30, r16
 6fe:	82 81       	ldd	r24, Z+2	; 0x02
 700:	81 3f       	cpi	r24, 0xF1	; 241
 702:	09 f5       	brne	.+66     	; 0x746 <__vector_1+0xd2>
 704:	0e 94 49 00 	call	0x92	; 0x92 <ToggleLights.part.0>
 708:	89 b3       	in	r24, 0x19	; 25
 70a:	86 95       	lsr	r24
 70c:	81 70       	andi	r24, 0x01	; 1
 70e:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <lastRelay1State>
 712:	19 c0       	rjmp	.+50     	; 0x746 <__vector_1+0xd2>
 714:	82 35       	cpi	r24, 0x52	; 82
 716:	99 f4       	brne	.+38     	; 0x73e <__vector_1+0xca>
 718:	f8 01       	movw	r30, r16
 71a:	82 81       	ldd	r24, Z+2	; 0x02
 71c:	81 3f       	cpi	r24, 0xF1	; 241
 71e:	99 f4       	brne	.+38     	; 0x746 <__vector_1+0xd2>
 720:	89 b3       	in	r24, 0x19	; 25
 722:	91 e4       	ldi	r25, 0x41	; 65
 724:	99 83       	std	Y+1, r25	; 0x01
 726:	92 e4       	ldi	r25, 0x42	; 66
 728:	9a 83       	std	Y+2, r25	; 0x02
 72a:	93 e4       	ldi	r25, 0x43	; 67
 72c:	9b 83       	std	Y+3, r25	; 0x03
 72e:	94 e4       	ldi	r25, 0x44	; 68
 730:	9c 83       	std	Y+4, r25	; 0x04
 732:	86 95       	lsr	r24
 734:	81 70       	andi	r24, 0x01	; 1
 736:	8d 83       	std	Y+5, r24	; 0x05
 738:	ce 01       	movw	r24, r28
 73a:	01 96       	adiw	r24, 0x01	; 1
 73c:	02 c0       	rjmp	.+4      	; 0x742 <__vector_1+0xce>
 73e:	ce 01       	movw	r24, r28
 740:	06 96       	adiw	r24, 0x06	; 6
 742:	0e 94 6f 02 	call	0x4de	; 0x4de <SendAnswer>
 746:	78 94       	sei
 748:	2a 96       	adiw	r28, 0x0a	; 10
 74a:	0f b6       	in	r0, 0x3f	; 63
 74c:	f8 94       	cli
 74e:	de bf       	out	0x3e, r29	; 62
 750:	0f be       	out	0x3f, r0	; 63
 752:	cd bf       	out	0x3d, r28	; 61
 754:	df 91       	pop	r29
 756:	cf 91       	pop	r28
 758:	ff 91       	pop	r31
 75a:	ef 91       	pop	r30
 75c:	bf 91       	pop	r27
 75e:	af 91       	pop	r26
 760:	9f 91       	pop	r25
 762:	8f 91       	pop	r24
 764:	7f 91       	pop	r23
 766:	6f 91       	pop	r22
 768:	5f 91       	pop	r21
 76a:	4f 91       	pop	r20
 76c:	3f 91       	pop	r19
 76e:	2f 91       	pop	r18
 770:	1f 91       	pop	r17
 772:	0f 91       	pop	r16
 774:	0f 90       	pop	r0
 776:	0f be       	out	0x3f, r0	; 63
 778:	0f 90       	pop	r0
 77a:	1f 90       	pop	r1
 77c:	18 95       	reti

0000077e <initRelays>:
 77e:	d1 9a       	sbi	0x1a, 1	; 26
 780:	d9 98       	cbi	0x1b, 1	; 27
 782:	08 95       	ret

00000784 <initPIRSensor>:
 784:	d3 98       	cbi	0x1a, 3	; 26
 786:	08 95       	ret

00000788 <initLightSwitch>:
 788:	d0 98       	cbi	0x1a, 0	; 26
 78a:	d8 9a       	sbi	0x1b, 0	; 27
 78c:	08 95       	ret

0000078e <main>:
 78e:	cf 93       	push	r28
 790:	df 93       	push	r29
 792:	cd b7       	in	r28, 0x3d	; 61
 794:	de b7       	in	r29, 0x3e	; 62
 796:	2a 97       	sbiw	r28, 0x0a	; 10
 798:	0f b6       	in	r0, 0x3f	; 63
 79a:	f8 94       	cli
 79c:	de bf       	out	0x3e, r29	; 62
 79e:	0f be       	out	0x3f, r0	; 63
 7a0:	cd bf       	out	0x3d, r28	; 61
 7a2:	b8 9a       	sbi	0x17, 0	; 23
 7a4:	c0 9a       	sbi	0x18, 0	; 24
 7a6:	0e 94 66 00 	call	0xcc	; 0xcc <Uart_Init>
 7aa:	0e 94 57 00 	call	0xae	; 0xae <spi_master_init>
 7ae:	85 e0       	ldi	r24, 0x05	; 5
 7b0:	e5 e6       	ldi	r30, 0x65	; 101
 7b2:	f0 e0       	ldi	r31, 0x00	; 0
 7b4:	de 01       	movw	r26, r28
 7b6:	16 96       	adiw	r26, 0x06	; 6
 7b8:	01 90       	ld	r0, Z+
 7ba:	0d 92       	st	X+, r0
 7bc:	8a 95       	dec	r24
 7be:	e1 f7       	brne	.-8      	; 0x7b8 <main+0x2a>
 7c0:	85 e0       	ldi	r24, 0x05	; 5
 7c2:	e5 e6       	ldi	r30, 0x65	; 101
 7c4:	f0 e0       	ldi	r31, 0x00	; 0
 7c6:	de 01       	movw	r26, r28
 7c8:	11 96       	adiw	r26, 0x01	; 1
 7ca:	01 90       	ld	r0, Z+
 7cc:	0d 92       	st	X+, r0
 7ce:	8a 95       	dec	r24
 7d0:	e1 f7       	brne	.-8      	; 0x7ca <main+0x3c>
 7d2:	22 e5       	ldi	r18, 0x52	; 82
 7d4:	ae 01       	movw	r20, r28
 7d6:	4f 5f       	subi	r20, 0xFF	; 255
 7d8:	5f 4f       	sbci	r21, 0xFF	; 255
 7da:	be 01       	movw	r22, r28
 7dc:	6a 5f       	subi	r22, 0xFA	; 250
 7de:	7f 4f       	sbci	r23, 0xFF	; 255
 7e0:	80 e0       	ldi	r24, 0x00	; 0
 7e2:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <Nrf24_init>
 7e6:	0e 94 bf 03 	call	0x77e	; 0x77e <initRelays>
 7ea:	0e 94 c2 03 	call	0x784	; 0x784 <initPIRSensor>
 7ee:	0e 94 c4 03 	call	0x788	; 0x788 <initLightSwitch>
 7f2:	0e 94 82 00 	call	0x104	; 0x104 <EnableExternalInterrupt0>
 7f6:	0e 94 dd 01 	call	0x3ba	; 0x3ba <resetNrf>
 7fa:	84 e7       	ldi	r24, 0x74	; 116
 7fc:	90 e0       	ldi	r25, 0x00	; 0
 7fe:	0e 94 76 00 	call	0xec	; 0xec <Uart_Send_String>
 802:	89 b3       	in	r24, 0x19	; 25
 804:	86 95       	lsr	r24
 806:	81 70       	andi	r24, 0x01	; 1
 808:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <lastRelay1State>
 80c:	89 b3       	in	r24, 0x19	; 25
 80e:	81 70       	andi	r24, 0x01	; 1
 810:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <lastSwitchState>
 814:	0e 94 1b 02 	call	0x436	; 0x436 <receive_data>
 818:	0e 94 62 02 	call	0x4c4	; 0x4c4 <CheckLightSwitches>
 81c:	0e 94 bd 02 	call	0x57a	; 0x57a <CheckRelays>
 820:	f9 cf       	rjmp	.-14     	; 0x814 <main+0x86>

00000822 <_exit>:
 822:	f8 94       	cli

00000824 <__stop_program>:
 824:	ff cf       	rjmp	.-2      	; 0x824 <__stop_program>
