
nRF43L01Atmega2(TX).elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000844  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000034  00800060  00000844  000008d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000029  00800094  00800094  0000090c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000090c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000093c  2**2
                  CONTENTS, READONLY
  5 .debug_info   0000052e  00000000  00000000  00000978  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000004e7  00000000  00000000  00000ea6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000115  00000000  00000000  0000138d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000001af  00000000  00000000  000014a2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 54 03 	jmp	0x6a8	; 0x6a8 <__vector_1>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e4       	ldi	r30, 0x44	; 68
  68:	f8 e0       	ldi	r31, 0x08	; 8
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 39       	cpi	r26, 0x94	; 148
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a4 e9       	ldi	r26, 0x94	; 148
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ad 3b       	cpi	r26, 0xBD	; 189
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 d6 03 	call	0x7ac	; 0x7ac <main>
  8a:	0c 94 20 04 	jmp	0x840	; 0x840 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <spi_master_init>:
  92:	87 b3       	in	r24, 0x17	; 23
  94:	88 6b       	ori	r24, 0xB8	; 184
  96:	87 bb       	out	0x17, r24	; 23
  98:	be 98       	cbi	0x17, 6	; 23
  9a:	8d b1       	in	r24, 0x0d	; 13
  9c:	80 65       	ori	r24, 0x50	; 80
  9e:	8d b9       	out	0x0d, r24	; 13
  a0:	c4 9a       	sbi	0x18, 4	; 24
  a2:	c3 98       	cbi	0x18, 3	; 24
  a4:	08 95       	ret

000000a6 <spi_Send_Receive>:
  a6:	8f b9       	out	0x0f, r24	; 15
  a8:	77 9b       	sbis	0x0e, 7	; 14
  aa:	fe cf       	rjmp	.-4      	; 0xa8 <spi_Send_Receive+0x2>
  ac:	8f b1       	in	r24, 0x0f	; 15
  ae:	08 95       	ret

000000b0 <Uart_Init>:
  b0:	89 9a       	sbi	0x11, 1	; 17
  b2:	88 98       	cbi	0x11, 0	; 17
  b4:	10 bc       	out	0x20, r1	; 32
  b6:	87 e6       	ldi	r24, 0x67	; 103
  b8:	89 b9       	out	0x09, r24	; 9
  ba:	8a b1       	in	r24, 0x0a	; 10
  bc:	88 61       	ori	r24, 0x18	; 24
  be:	8a b9       	out	0x0a, r24	; 10
  c0:	80 b5       	in	r24, 0x20	; 32
  c2:	86 68       	ori	r24, 0x86	; 134
  c4:	80 bd       	out	0x20, r24	; 32
  c6:	08 95       	ret

000000c8 <Uart_Transmit>:
  c8:	5d 9b       	sbis	0x0b, 5	; 11
  ca:	fe cf       	rjmp	.-4      	; 0xc8 <Uart_Transmit>
  cc:	8c b9       	out	0x0c, r24	; 12
  ce:	08 95       	ret

000000d0 <Uart_Send_String>:
  d0:	cf 93       	push	r28
  d2:	df 93       	push	r29
  d4:	ec 01       	movw	r28, r24
  d6:	89 91       	ld	r24, Y+
  d8:	88 23       	and	r24, r24
  da:	19 f0       	breq	.+6      	; 0xe2 <Uart_Send_String+0x12>
  dc:	0e 94 64 00 	call	0xc8	; 0xc8 <Uart_Transmit>
  e0:	fa cf       	rjmp	.-12     	; 0xd6 <Uart_Send_String+0x6>
  e2:	df 91       	pop	r29
  e4:	cf 91       	pop	r28
  e6:	08 95       	ret

000000e8 <EnableExternalInterrupt0>:
  e8:	8a 98       	cbi	0x11, 2	; 17
  ea:	8b b7       	in	r24, 0x3b	; 59
  ec:	80 64       	ori	r24, 0x40	; 64
  ee:	8b bf       	out	0x3b, r24	; 59
  f0:	85 b7       	in	r24, 0x35	; 53
  f2:	82 60       	ori	r24, 0x02	; 2
  f4:	85 bf       	out	0x35, r24	; 53
  f6:	78 94       	sei
  f8:	08 95       	ret

000000fa <ReadWriteNRF>:
  fa:	cf 92       	push	r12
  fc:	df 92       	push	r13
  fe:	ef 92       	push	r14
 100:	ff 92       	push	r15
 102:	0f 93       	push	r16
 104:	1f 93       	push	r17
 106:	cf 93       	push	r28
 108:	df 93       	push	r29
 10a:	d8 2f       	mov	r29, r24
 10c:	c6 2f       	mov	r28, r22
 10e:	7a 01       	movw	r14, r20
 110:	c2 2e       	mov	r12, r18
 112:	f8 94       	cli
 114:	81 30       	cpi	r24, 0x01	; 1
 116:	29 f4       	brne	.+10     	; 0x122 <ReadWriteNRF+0x28>
 118:	60 3a       	cpi	r22, 0xA0	; 160
 11a:	19 f0       	breq	.+6      	; 0x122 <ReadWriteNRF+0x28>
 11c:	61 3e       	cpi	r22, 0xE1	; 225
 11e:	09 f0       	breq	.+2      	; 0x122 <ReadWriteNRF+0x28>
 120:	c0 5e       	subi	r28, 0xE0	; 224
 122:	85 e3       	ldi	r24, 0x35	; 53
 124:	8a 95       	dec	r24
 126:	f1 f7       	brne	.-4      	; 0x124 <ReadWriteNRF+0x2a>
 128:	00 00       	nop
 12a:	c4 98       	cbi	0x18, 4	; 24
 12c:	e5 e3       	ldi	r30, 0x35	; 53
 12e:	ea 95       	dec	r30
 130:	f1 f7       	brne	.-4      	; 0x12e <ReadWriteNRF+0x34>
 132:	00 00       	nop
 134:	8c 2f       	mov	r24, r28
 136:	0e 94 53 00 	call	0xa6	; 0xa6 <spi_Send_Receive>
 13a:	f5 e3       	ldi	r31, 0x35	; 53
 13c:	fa 95       	dec	r31
 13e:	f1 f7       	brne	.-4      	; 0x13c <ReadWriteNRF+0x42>
 140:	00 00       	nop
 142:	87 01       	movw	r16, r14
 144:	84 e9       	ldi	r24, 0x94	; 148
 146:	e8 2e       	mov	r14, r24
 148:	80 e0       	ldi	r24, 0x00	; 0
 14a:	f8 2e       	mov	r15, r24
 14c:	d1 2c       	mov	r13, r1
 14e:	c7 01       	movw	r24, r14
 150:	84 59       	subi	r24, 0x94	; 148
 152:	90 40       	sbci	r25, 0x00	; 0
 154:	8c 15       	cp	r24, r12
 156:	9d 05       	cpc	r25, r13
 158:	c4 f4       	brge	.+48     	; 0x18a <ReadWriteNRF+0x90>
 15a:	d1 11       	cpse	r29, r1
 15c:	08 c0       	rjmp	.+16     	; 0x16e <ReadWriteNRF+0x74>
 15e:	c0 3a       	cpi	r28, 0xA0	; 160
 160:	31 f0       	breq	.+12     	; 0x16e <ReadWriteNRF+0x74>
 162:	8f ef       	ldi	r24, 0xFF	; 255
 164:	0e 94 53 00 	call	0xa6	; 0xa6 <spi_Send_Receive>
 168:	f7 01       	movw	r30, r14
 16a:	80 83       	st	Z, r24
 16c:	04 c0       	rjmp	.+8      	; 0x176 <ReadWriteNRF+0x7c>
 16e:	f8 01       	movw	r30, r16
 170:	80 81       	ld	r24, Z
 172:	0e 94 53 00 	call	0xa6	; 0xa6 <spi_Send_Receive>
 176:	f5 e3       	ldi	r31, 0x35	; 53
 178:	fa 95       	dec	r31
 17a:	f1 f7       	brne	.-4      	; 0x178 <ReadWriteNRF+0x7e>
 17c:	00 00       	nop
 17e:	8f ef       	ldi	r24, 0xFF	; 255
 180:	e8 1a       	sub	r14, r24
 182:	f8 0a       	sbc	r15, r24
 184:	0f 5f       	subi	r16, 0xFF	; 255
 186:	1f 4f       	sbci	r17, 0xFF	; 255
 188:	e2 cf       	rjmp	.-60     	; 0x14e <ReadWriteNRF+0x54>
 18a:	c4 9a       	sbi	0x18, 4	; 24
 18c:	78 94       	sei
 18e:	84 e9       	ldi	r24, 0x94	; 148
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	df 91       	pop	r29
 194:	cf 91       	pop	r28
 196:	1f 91       	pop	r17
 198:	0f 91       	pop	r16
 19a:	ff 90       	pop	r15
 19c:	ef 90       	pop	r14
 19e:	df 90       	pop	r13
 1a0:	cf 90       	pop	r12
 1a2:	08 95       	ret

000001a4 <Nrf24_init>:
 1a4:	bf 92       	push	r11
 1a6:	cf 92       	push	r12
 1a8:	df 92       	push	r13
 1aa:	ef 92       	push	r14
 1ac:	ff 92       	push	r15
 1ae:	0f 93       	push	r16
 1b0:	1f 93       	push	r17
 1b2:	cf 93       	push	r28
 1b4:	df 93       	push	r29
 1b6:	00 d0       	rcall	.+0      	; 0x1b8 <Nrf24_init+0x14>
 1b8:	00 d0       	rcall	.+0      	; 0x1ba <Nrf24_init+0x16>
 1ba:	1f 92       	push	r1
 1bc:	cd b7       	in	r28, 0x3d	; 61
 1be:	de b7       	in	r29, 0x3e	; 62
 1c0:	18 2f       	mov	r17, r24
 1c2:	6b 01       	movw	r12, r22
 1c4:	7a 01       	movw	r14, r20
 1c6:	b2 2e       	mov	r11, r18
 1c8:	2f ef       	ldi	r18, 0xFF	; 255
 1ca:	81 ee       	ldi	r24, 0xE1	; 225
 1cc:	94 e0       	ldi	r25, 0x04	; 4
 1ce:	21 50       	subi	r18, 0x01	; 1
 1d0:	80 40       	sbci	r24, 0x00	; 0
 1d2:	90 40       	sbci	r25, 0x00	; 0
 1d4:	e1 f7       	brne	.-8      	; 0x1ce <Nrf24_init+0x2a>
 1d6:	00 c0       	rjmp	.+0      	; 0x1d8 <Nrf24_init+0x34>
 1d8:	00 00       	nop
 1da:	01 e0       	ldi	r16, 0x01	; 1
 1dc:	01 0f       	add	r16, r17
 1de:	09 83       	std	Y+1, r16	; 0x01
 1e0:	21 e0       	ldi	r18, 0x01	; 1
 1e2:	ae 01       	movw	r20, r28
 1e4:	4f 5f       	subi	r20, 0xFF	; 255
 1e6:	5f 4f       	sbci	r21, 0xFF	; 255
 1e8:	61 e0       	ldi	r22, 0x01	; 1
 1ea:	81 e0       	ldi	r24, 0x01	; 1
 1ec:	0e 94 7d 00 	call	0xfa	; 0xfa <ReadWriteNRF>
 1f0:	8f e2       	ldi	r24, 0x2F	; 47
 1f2:	89 83       	std	Y+1, r24	; 0x01
 1f4:	21 e0       	ldi	r18, 0x01	; 1
 1f6:	ae 01       	movw	r20, r28
 1f8:	4f 5f       	subi	r20, 0xFF	; 255
 1fa:	5f 4f       	sbci	r21, 0xFF	; 255
 1fc:	64 e0       	ldi	r22, 0x04	; 4
 1fe:	81 e0       	ldi	r24, 0x01	; 1
 200:	0e 94 7d 00 	call	0xfa	; 0xfa <ReadWriteNRF>
 204:	09 83       	std	Y+1, r16	; 0x01
 206:	21 e0       	ldi	r18, 0x01	; 1
 208:	ae 01       	movw	r20, r28
 20a:	4f 5f       	subi	r20, 0xFF	; 255
 20c:	5f 4f       	sbci	r21, 0xFF	; 255
 20e:	62 e0       	ldi	r22, 0x02	; 2
 210:	81 e0       	ldi	r24, 0x01	; 1
 212:	0e 94 7d 00 	call	0xfa	; 0xfa <ReadWriteNRF>
 216:	83 e0       	ldi	r24, 0x03	; 3
 218:	89 83       	std	Y+1, r24	; 0x01
 21a:	21 e0       	ldi	r18, 0x01	; 1
 21c:	ae 01       	movw	r20, r28
 21e:	4f 5f       	subi	r20, 0xFF	; 255
 220:	5f 4f       	sbci	r21, 0xFF	; 255
 222:	63 e0       	ldi	r22, 0x03	; 3
 224:	81 e0       	ldi	r24, 0x01	; 1
 226:	0e 94 7d 00 	call	0xfa	; 0xfa <ReadWriteNRF>
 22a:	81 e0       	ldi	r24, 0x01	; 1
 22c:	89 83       	std	Y+1, r24	; 0x01
 22e:	21 e0       	ldi	r18, 0x01	; 1
 230:	ae 01       	movw	r20, r28
 232:	4f 5f       	subi	r20, 0xFF	; 255
 234:	5f 4f       	sbci	r21, 0xFF	; 255
 236:	65 e0       	ldi	r22, 0x05	; 5
 238:	0e 94 7d 00 	call	0xfa	; 0xfa <ReadWriteNRF>
 23c:	87 e0       	ldi	r24, 0x07	; 7
 23e:	89 83       	std	Y+1, r24	; 0x01
 240:	21 e0       	ldi	r18, 0x01	; 1
 242:	ae 01       	movw	r20, r28
 244:	4f 5f       	subi	r20, 0xFF	; 255
 246:	5f 4f       	sbci	r21, 0xFF	; 255
 248:	66 e0       	ldi	r22, 0x06	; 6
 24a:	81 e0       	ldi	r24, 0x01	; 1
 24c:	0e 94 7d 00 	call	0xfa	; 0xfa <ReadWriteNRF>
 250:	85 e0       	ldi	r24, 0x05	; 5
 252:	89 83       	std	Y+1, r24	; 0x01
 254:	12 30       	cpi	r17, 0x02	; 2
 256:	09 f4       	brne	.+2      	; 0x25a <Nrf24_init+0xb6>
 258:	43 c0       	rjmp	.+134    	; 0x2e0 <Nrf24_init+0x13c>
 25a:	b8 f4       	brcc	.+46     	; 0x28a <Nrf24_init+0xe6>
 25c:	11 23       	and	r17, r17
 25e:	71 f1       	breq	.+92     	; 0x2bc <Nrf24_init+0x118>
 260:	11 30       	cpi	r17, 0x01	; 1
 262:	09 f0       	breq	.+2      	; 0x266 <Nrf24_init+0xc2>
 264:	75 c0       	rjmp	.+234    	; 0x350 <Nrf24_init+0x1ac>
 266:	25 e0       	ldi	r18, 0x05	; 5
 268:	a6 01       	movw	r20, r12
 26a:	6b e0       	ldi	r22, 0x0B	; 11
 26c:	81 e0       	ldi	r24, 0x01	; 1
 26e:	0e 94 7d 00 	call	0xfa	; 0xfa <ReadWriteNRF>
 272:	25 e0       	ldi	r18, 0x05	; 5
 274:	a7 01       	movw	r20, r14
 276:	60 e1       	ldi	r22, 0x10	; 16
 278:	81 e0       	ldi	r24, 0x01	; 1
 27a:	0e 94 7d 00 	call	0xfa	; 0xfa <ReadWriteNRF>
 27e:	21 e0       	ldi	r18, 0x01	; 1
 280:	ae 01       	movw	r20, r28
 282:	4f 5f       	subi	r20, 0xFF	; 255
 284:	5f 4f       	sbci	r21, 0xFF	; 255
 286:	62 e1       	ldi	r22, 0x12	; 18
 288:	60 c0       	rjmp	.+192    	; 0x34a <Nrf24_init+0x1a6>
 28a:	14 30       	cpi	r17, 0x04	; 4
 28c:	09 f4       	brne	.+2      	; 0x290 <Nrf24_init+0xec>
 28e:	4c c0       	rjmp	.+152    	; 0x328 <Nrf24_init+0x184>
 290:	c8 f1       	brcs	.+114    	; 0x304 <Nrf24_init+0x160>
 292:	15 30       	cpi	r17, 0x05	; 5
 294:	09 f0       	breq	.+2      	; 0x298 <Nrf24_init+0xf4>
 296:	5c c0       	rjmp	.+184    	; 0x350 <Nrf24_init+0x1ac>
 298:	25 e0       	ldi	r18, 0x05	; 5
 29a:	a6 01       	movw	r20, r12
 29c:	6f e0       	ldi	r22, 0x0F	; 15
 29e:	81 e0       	ldi	r24, 0x01	; 1
 2a0:	0e 94 7d 00 	call	0xfa	; 0xfa <ReadWriteNRF>
 2a4:	25 e0       	ldi	r18, 0x05	; 5
 2a6:	a7 01       	movw	r20, r14
 2a8:	60 e1       	ldi	r22, 0x10	; 16
 2aa:	81 e0       	ldi	r24, 0x01	; 1
 2ac:	0e 94 7d 00 	call	0xfa	; 0xfa <ReadWriteNRF>
 2b0:	21 e0       	ldi	r18, 0x01	; 1
 2b2:	ae 01       	movw	r20, r28
 2b4:	4f 5f       	subi	r20, 0xFF	; 255
 2b6:	5f 4f       	sbci	r21, 0xFF	; 255
 2b8:	66 e1       	ldi	r22, 0x16	; 22
 2ba:	47 c0       	rjmp	.+142    	; 0x34a <Nrf24_init+0x1a6>
 2bc:	25 e0       	ldi	r18, 0x05	; 5
 2be:	a6 01       	movw	r20, r12
 2c0:	6a e0       	ldi	r22, 0x0A	; 10
 2c2:	81 e0       	ldi	r24, 0x01	; 1
 2c4:	0e 94 7d 00 	call	0xfa	; 0xfa <ReadWriteNRF>
 2c8:	25 e0       	ldi	r18, 0x05	; 5
 2ca:	a7 01       	movw	r20, r14
 2cc:	60 e1       	ldi	r22, 0x10	; 16
 2ce:	81 e0       	ldi	r24, 0x01	; 1
 2d0:	0e 94 7d 00 	call	0xfa	; 0xfa <ReadWriteNRF>
 2d4:	21 e0       	ldi	r18, 0x01	; 1
 2d6:	ae 01       	movw	r20, r28
 2d8:	4f 5f       	subi	r20, 0xFF	; 255
 2da:	5f 4f       	sbci	r21, 0xFF	; 255
 2dc:	61 e1       	ldi	r22, 0x11	; 17
 2de:	35 c0       	rjmp	.+106    	; 0x34a <Nrf24_init+0x1a6>
 2e0:	25 e0       	ldi	r18, 0x05	; 5
 2e2:	a6 01       	movw	r20, r12
 2e4:	6c e0       	ldi	r22, 0x0C	; 12
 2e6:	81 e0       	ldi	r24, 0x01	; 1
 2e8:	0e 94 7d 00 	call	0xfa	; 0xfa <ReadWriteNRF>
 2ec:	25 e0       	ldi	r18, 0x05	; 5
 2ee:	a7 01       	movw	r20, r14
 2f0:	60 e1       	ldi	r22, 0x10	; 16
 2f2:	81 e0       	ldi	r24, 0x01	; 1
 2f4:	0e 94 7d 00 	call	0xfa	; 0xfa <ReadWriteNRF>
 2f8:	21 e0       	ldi	r18, 0x01	; 1
 2fa:	ae 01       	movw	r20, r28
 2fc:	4f 5f       	subi	r20, 0xFF	; 255
 2fe:	5f 4f       	sbci	r21, 0xFF	; 255
 300:	63 e1       	ldi	r22, 0x13	; 19
 302:	23 c0       	rjmp	.+70     	; 0x34a <Nrf24_init+0x1a6>
 304:	25 e0       	ldi	r18, 0x05	; 5
 306:	a6 01       	movw	r20, r12
 308:	6d e0       	ldi	r22, 0x0D	; 13
 30a:	81 e0       	ldi	r24, 0x01	; 1
 30c:	0e 94 7d 00 	call	0xfa	; 0xfa <ReadWriteNRF>
 310:	25 e0       	ldi	r18, 0x05	; 5
 312:	a7 01       	movw	r20, r14
 314:	60 e1       	ldi	r22, 0x10	; 16
 316:	81 e0       	ldi	r24, 0x01	; 1
 318:	0e 94 7d 00 	call	0xfa	; 0xfa <ReadWriteNRF>
 31c:	21 e0       	ldi	r18, 0x01	; 1
 31e:	ae 01       	movw	r20, r28
 320:	4f 5f       	subi	r20, 0xFF	; 255
 322:	5f 4f       	sbci	r21, 0xFF	; 255
 324:	64 e1       	ldi	r22, 0x14	; 20
 326:	11 c0       	rjmp	.+34     	; 0x34a <Nrf24_init+0x1a6>
 328:	25 e0       	ldi	r18, 0x05	; 5
 32a:	a6 01       	movw	r20, r12
 32c:	6e e0       	ldi	r22, 0x0E	; 14
 32e:	81 e0       	ldi	r24, 0x01	; 1
 330:	0e 94 7d 00 	call	0xfa	; 0xfa <ReadWriteNRF>
 334:	25 e0       	ldi	r18, 0x05	; 5
 336:	a7 01       	movw	r20, r14
 338:	60 e1       	ldi	r22, 0x10	; 16
 33a:	81 e0       	ldi	r24, 0x01	; 1
 33c:	0e 94 7d 00 	call	0xfa	; 0xfa <ReadWriteNRF>
 340:	21 e0       	ldi	r18, 0x01	; 1
 342:	ae 01       	movw	r20, r28
 344:	4f 5f       	subi	r20, 0xFF	; 255
 346:	5f 4f       	sbci	r21, 0xFF	; 255
 348:	65 e1       	ldi	r22, 0x15	; 21
 34a:	81 e0       	ldi	r24, 0x01	; 1
 34c:	0e 94 7d 00 	call	0xfa	; 0xfa <ReadWriteNRF>
 350:	24 e5       	ldi	r18, 0x54	; 84
 352:	b2 12       	cpse	r11, r18
 354:	02 c0       	rjmp	.+4      	; 0x35a <Nrf24_init+0x1b6>
 356:	8e e1       	ldi	r24, 0x1E	; 30
 358:	01 c0       	rjmp	.+2      	; 0x35c <Nrf24_init+0x1b8>
 35a:	8f e1       	ldi	r24, 0x1F	; 31
 35c:	89 83       	std	Y+1, r24	; 0x01
 35e:	21 e0       	ldi	r18, 0x01	; 1
 360:	ae 01       	movw	r20, r28
 362:	4f 5f       	subi	r20, 0xFF	; 255
 364:	5f 4f       	sbci	r21, 0xFF	; 255
 366:	60 e0       	ldi	r22, 0x00	; 0
 368:	81 e0       	ldi	r24, 0x01	; 1
 36a:	0e 94 7d 00 	call	0xfa	; 0xfa <ReadWriteNRF>
 36e:	8f ef       	ldi	r24, 0xFF	; 255
 370:	91 ee       	ldi	r25, 0xE1	; 225
 372:	24 e0       	ldi	r18, 0x04	; 4
 374:	81 50       	subi	r24, 0x01	; 1
 376:	90 40       	sbci	r25, 0x00	; 0
 378:	20 40       	sbci	r18, 0x00	; 0
 37a:	e1 f7       	brne	.-8      	; 0x374 <Nrf24_init+0x1d0>
 37c:	00 c0       	rjmp	.+0      	; 0x37e <Nrf24_init+0x1da>
 37e:	00 00       	nop
 380:	0f 90       	pop	r0
 382:	0f 90       	pop	r0
 384:	0f 90       	pop	r0
 386:	0f 90       	pop	r0
 388:	0f 90       	pop	r0
 38a:	df 91       	pop	r29
 38c:	cf 91       	pop	r28
 38e:	1f 91       	pop	r17
 390:	0f 91       	pop	r16
 392:	ff 90       	pop	r15
 394:	ef 90       	pop	r14
 396:	df 90       	pop	r13
 398:	cf 90       	pop	r12
 39a:	bf 90       	pop	r11
 39c:	08 95       	ret

0000039e <resetNrf>:
 39e:	85 e3       	ldi	r24, 0x35	; 53
 3a0:	8a 95       	dec	r24
 3a2:	f1 f7       	brne	.-4      	; 0x3a0 <resetNrf+0x2>
 3a4:	00 00       	nop
 3a6:	c4 98       	cbi	0x18, 4	; 24
 3a8:	85 e3       	ldi	r24, 0x35	; 53
 3aa:	8a 95       	dec	r24
 3ac:	f1 f7       	brne	.-4      	; 0x3aa <resetNrf+0xc>
 3ae:	00 00       	nop
 3b0:	87 e2       	ldi	r24, 0x27	; 39
 3b2:	0e 94 53 00 	call	0xa6	; 0xa6 <spi_Send_Receive>
 3b6:	85 e3       	ldi	r24, 0x35	; 53
 3b8:	8a 95       	dec	r24
 3ba:	f1 f7       	brne	.-4      	; 0x3b8 <resetNrf+0x1a>
 3bc:	00 00       	nop
 3be:	80 e7       	ldi	r24, 0x70	; 112
 3c0:	0e 94 53 00 	call	0xa6	; 0xa6 <spi_Send_Receive>
 3c4:	85 e3       	ldi	r24, 0x35	; 53
 3c6:	8a 95       	dec	r24
 3c8:	f1 f7       	brne	.-4      	; 0x3c6 <resetNrf+0x28>
 3ca:	00 00       	nop
 3cc:	c4 9a       	sbi	0x18, 4	; 24
 3ce:	08 95       	ret

000003d0 <transmit_data>:
 3d0:	cf 93       	push	r28
 3d2:	df 93       	push	r29
 3d4:	ec 01       	movw	r28, r24
 3d6:	20 e0       	ldi	r18, 0x00	; 0
 3d8:	ac 01       	movw	r20, r24
 3da:	61 ee       	ldi	r22, 0xE1	; 225
 3dc:	80 e0       	ldi	r24, 0x00	; 0
 3de:	0e 94 7d 00 	call	0xfa	; 0xfa <ReadWriteNRF>
 3e2:	25 e0       	ldi	r18, 0x05	; 5
 3e4:	ae 01       	movw	r20, r28
 3e6:	60 ea       	ldi	r22, 0xA0	; 160
 3e8:	80 e0       	ldi	r24, 0x00	; 0
 3ea:	0e 94 7d 00 	call	0xfa	; 0xfa <ReadWriteNRF>
 3ee:	8f e3       	ldi	r24, 0x3F	; 63
 3f0:	9c e9       	ldi	r25, 0x9C	; 156
 3f2:	01 97       	sbiw	r24, 0x01	; 1
 3f4:	f1 f7       	brne	.-4      	; 0x3f2 <transmit_data+0x22>
 3f6:	00 c0       	rjmp	.+0      	; 0x3f8 <transmit_data+0x28>
 3f8:	00 00       	nop
 3fa:	c3 9a       	sbi	0x18, 3	; 24
 3fc:	87 ec       	ldi	r24, 0xC7	; 199
 3fe:	90 e0       	ldi	r25, 0x00	; 0
 400:	01 97       	sbiw	r24, 0x01	; 1
 402:	f1 f7       	brne	.-4      	; 0x400 <__LOCK_REGION_LENGTH__>
 404:	00 c0       	rjmp	.+0      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 406:	00 00       	nop
 408:	c3 98       	cbi	0x18, 3	; 24
 40a:	95 e3       	ldi	r25, 0x35	; 53
 40c:	9a 95       	dec	r25
 40e:	f1 f7       	brne	.-4      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 410:	00 00       	nop
 412:	df 91       	pop	r29
 414:	cf 91       	pop	r28
 416:	0c 94 cf 01 	jmp	0x39e	; 0x39e <resetNrf>

0000041a <receive_data>:
 41a:	78 94       	sei
 41c:	c3 9a       	sbi	0x18, 3	; 24
 41e:	2f ef       	ldi	r18, 0xFF	; 255
 420:	87 ea       	ldi	r24, 0xA7	; 167
 422:	91 e6       	ldi	r25, 0x61	; 97
 424:	21 50       	subi	r18, 0x01	; 1
 426:	80 40       	sbci	r24, 0x00	; 0
 428:	90 40       	sbci	r25, 0x00	; 0
 42a:	e1 f7       	brne	.-8      	; 0x424 <receive_data+0xa>
 42c:	00 c0       	rjmp	.+0      	; 0x42e <receive_data+0x14>
 42e:	00 00       	nop
 430:	c3 98       	cbi	0x18, 3	; 24
 432:	f8 94       	cli
 434:	0c 94 cf 01 	jmp	0x39e	; 0x39e <resetNrf>

00000438 <changeNrfToRX>:
 438:	cf 93       	push	r28
 43a:	df 93       	push	r29
 43c:	1f 92       	push	r1
 43e:	cd b7       	in	r28, 0x3d	; 61
 440:	de b7       	in	r29, 0x3e	; 62
 442:	8f e1       	ldi	r24, 0x1F	; 31
 444:	89 83       	std	Y+1, r24	; 0x01
 446:	21 e0       	ldi	r18, 0x01	; 1
 448:	ae 01       	movw	r20, r28
 44a:	4f 5f       	subi	r20, 0xFF	; 255
 44c:	5f 4f       	sbci	r21, 0xFF	; 255
 44e:	60 e0       	ldi	r22, 0x00	; 0
 450:	81 e0       	ldi	r24, 0x01	; 1
 452:	0e 94 7d 00 	call	0xfa	; 0xfa <ReadWriteNRF>
 456:	2f ef       	ldi	r18, 0xFF	; 255
 458:	81 ee       	ldi	r24, 0xE1	; 225
 45a:	94 e0       	ldi	r25, 0x04	; 4
 45c:	21 50       	subi	r18, 0x01	; 1
 45e:	80 40       	sbci	r24, 0x00	; 0
 460:	90 40       	sbci	r25, 0x00	; 0
 462:	e1 f7       	brne	.-8      	; 0x45c <changeNrfToRX+0x24>
 464:	00 c0       	rjmp	.+0      	; 0x466 <__stack+0x7>
 466:	00 00       	nop
 468:	0f 90       	pop	r0
 46a:	df 91       	pop	r29
 46c:	cf 91       	pop	r28
 46e:	08 95       	ret

00000470 <changeNrfToTX>:
 470:	cf 93       	push	r28
 472:	df 93       	push	r29
 474:	1f 92       	push	r1
 476:	cd b7       	in	r28, 0x3d	; 61
 478:	de b7       	in	r29, 0x3e	; 62
 47a:	8e e1       	ldi	r24, 0x1E	; 30
 47c:	89 83       	std	Y+1, r24	; 0x01
 47e:	21 e0       	ldi	r18, 0x01	; 1
 480:	ae 01       	movw	r20, r28
 482:	4f 5f       	subi	r20, 0xFF	; 255
 484:	5f 4f       	sbci	r21, 0xFF	; 255
 486:	60 e0       	ldi	r22, 0x00	; 0
 488:	81 e0       	ldi	r24, 0x01	; 1
 48a:	0e 94 7d 00 	call	0xfa	; 0xfa <ReadWriteNRF>
 48e:	2f ef       	ldi	r18, 0xFF	; 255
 490:	81 ee       	ldi	r24, 0xE1	; 225
 492:	94 e0       	ldi	r25, 0x04	; 4
 494:	21 50       	subi	r18, 0x01	; 1
 496:	80 40       	sbci	r24, 0x00	; 0
 498:	90 40       	sbci	r25, 0x00	; 0
 49a:	e1 f7       	brne	.-8      	; 0x494 <changeNrfToTX+0x24>
 49c:	00 c0       	rjmp	.+0      	; 0x49e <changeNrfToTX+0x2e>
 49e:	00 00       	nop
 4a0:	0f 90       	pop	r0
 4a2:	df 91       	pop	r29
 4a4:	cf 91       	pop	r28
 4a6:	08 95       	ret

000004a8 <SendAnswer>:
 4a8:	cf 93       	push	r28
 4aa:	df 93       	push	r29
 4ac:	ec 01       	movw	r28, r24
 4ae:	0e 94 cf 01 	call	0x39e	; 0x39e <resetNrf>
 4b2:	0e 94 38 02 	call	0x470	; 0x470 <changeNrfToTX>
 4b6:	ce 01       	movw	r24, r28
 4b8:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <transmit_data>
 4bc:	8f e8       	ldi	r24, 0x8F	; 143
 4be:	91 e0       	ldi	r25, 0x01	; 1
 4c0:	01 97       	sbiw	r24, 0x01	; 1
 4c2:	f1 f7       	brne	.-4      	; 0x4c0 <SendAnswer+0x18>
 4c4:	00 c0       	rjmp	.+0      	; 0x4c6 <SendAnswer+0x1e>
 4c6:	00 00       	nop
 4c8:	df 91       	pop	r29
 4ca:	cf 91       	pop	r28
 4cc:	0c 94 1c 02 	jmp	0x438	; 0x438 <changeNrfToRX>

000004d0 <SendAnswerUntilReceived>:
 4d0:	cf 92       	push	r12
 4d2:	df 92       	push	r13
 4d4:	ef 92       	push	r14
 4d6:	ff 92       	push	r15
 4d8:	0f 93       	push	r16
 4da:	1f 93       	push	r17
 4dc:	cf 93       	push	r28
 4de:	df 93       	push	r29
 4e0:	00 d0       	rcall	.+0      	; 0x4e2 <SendAnswerUntilReceived+0x12>
 4e2:	00 d0       	rcall	.+0      	; 0x4e4 <SendAnswerUntilReceived+0x14>
 4e4:	1f 92       	push	r1
 4e6:	cd b7       	in	r28, 0x3d	; 61
 4e8:	de b7       	in	r29, 0x3e	; 62
 4ea:	08 2f       	mov	r16, r24
 4ec:	f6 2e       	mov	r15, r22
 4ee:	10 92 b5 00 	sts	0x00B5, r1	; 0x8000b5 <successfullySend>
 4f2:	1b e0       	ldi	r17, 0x0B	; 11
 4f4:	81 e4       	ldi	r24, 0x41	; 65
 4f6:	e8 2e       	mov	r14, r24
 4f8:	92 e4       	ldi	r25, 0x42	; 66
 4fa:	d9 2e       	mov	r13, r25
 4fc:	23 e4       	ldi	r18, 0x43	; 67
 4fe:	c2 2e       	mov	r12, r18
 500:	80 91 b5 00 	lds	r24, 0x00B5	; 0x8000b5 <successfullySend>
 504:	81 30       	cpi	r24, 0x01	; 1
 506:	71 f0       	breq	.+28     	; 0x524 <SendAnswerUntilReceived+0x54>
 508:	11 50       	subi	r17, 0x01	; 1
 50a:	61 f0       	breq	.+24     	; 0x524 <SendAnswerUntilReceived+0x54>
 50c:	e9 82       	std	Y+1, r14	; 0x01
 50e:	da 82       	std	Y+2, r13	; 0x02
 510:	cb 82       	std	Y+3, r12	; 0x03
 512:	fc 82       	std	Y+4, r15	; 0x04
 514:	0d 83       	std	Y+5, r16	; 0x05
 516:	ce 01       	movw	r24, r28
 518:	01 96       	adiw	r24, 0x01	; 1
 51a:	0e 94 54 02 	call	0x4a8	; 0x4a8 <SendAnswer>
 51e:	0e 94 0d 02 	call	0x41a	; 0x41a <receive_data>
 522:	ee cf       	rjmp	.-36     	; 0x500 <SendAnswerUntilReceived+0x30>
 524:	10 92 b5 00 	sts	0x00B5, r1	; 0x8000b5 <successfullySend>
 528:	0f 90       	pop	r0
 52a:	0f 90       	pop	r0
 52c:	0f 90       	pop	r0
 52e:	0f 90       	pop	r0
 530:	0f 90       	pop	r0
 532:	df 91       	pop	r29
 534:	cf 91       	pop	r28
 536:	1f 91       	pop	r17
 538:	0f 91       	pop	r16
 53a:	ff 90       	pop	r15
 53c:	ef 90       	pop	r14
 53e:	df 90       	pop	r13
 540:	cf 90       	pop	r12
 542:	08 95       	ret

00000544 <CheckRelays>:
 544:	cf 93       	push	r28
 546:	c9 b3       	in	r28, 0x19	; 25
 548:	c6 95       	lsr	r28
 54a:	c1 70       	andi	r28, 0x01	; 1
 54c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <lastRelay1State>
 550:	8c 17       	cp	r24, r28
 552:	41 f0       	breq	.+16     	; 0x564 <CheckRelays+0x20>
 554:	69 b3       	in	r22, 0x19	; 25
 556:	66 95       	lsr	r22
 558:	61 70       	andi	r22, 0x01	; 1
 55a:	81 ef       	ldi	r24, 0xF1	; 241
 55c:	0e 94 68 02 	call	0x4d0	; 0x4d0 <SendAnswerUntilReceived>
 560:	c0 93 bc 00 	sts	0x00BC, r28	; 0x8000bc <lastRelay1State>
 564:	cf 91       	pop	r28
 566:	08 95       	ret

00000568 <Request>:
 568:	8e 9a       	sbi	0x11, 6	; 17
 56a:	96 98       	cbi	0x12, 6	; 18
 56c:	2f ef       	ldi	r18, 0xFF	; 255
 56e:	89 ef       	ldi	r24, 0xF9	; 249
 570:	90 e0       	ldi	r25, 0x00	; 0
 572:	21 50       	subi	r18, 0x01	; 1
 574:	80 40       	sbci	r24, 0x00	; 0
 576:	90 40       	sbci	r25, 0x00	; 0
 578:	e1 f7       	brne	.-8      	; 0x572 <Request+0xa>
 57a:	00 c0       	rjmp	.+0      	; 0x57c <Request+0x14>
 57c:	00 00       	nop
 57e:	96 9a       	sbi	0x12, 6	; 18
 580:	08 95       	ret

00000582 <Response>:
 582:	8e 98       	cbi	0x11, 6	; 17
 584:	86 99       	sbic	0x10, 6	; 16
 586:	fe cf       	rjmp	.-4      	; 0x584 <Response+0x2>
 588:	86 9b       	sbis	0x10, 6	; 16
 58a:	fe cf       	rjmp	.-4      	; 0x588 <Response+0x6>
 58c:	86 99       	sbic	0x10, 6	; 16
 58e:	fe cf       	rjmp	.-4      	; 0x58c <Response+0xa>
 590:	08 95       	ret

00000592 <Receive_data_DHT11>:
 592:	28 e0       	ldi	r18, 0x08	; 8
 594:	30 e0       	ldi	r19, 0x00	; 0
 596:	86 9b       	sbis	0x10, 6	; 16
 598:	fe cf       	rjmp	.-4      	; 0x596 <Receive_data_DHT11+0x4>
 59a:	80 ea       	ldi	r24, 0xA0	; 160
 59c:	8a 95       	dec	r24
 59e:	f1 f7       	brne	.-4      	; 0x59c <Receive_data_DHT11+0xa>
 5a0:	80 91 b4 00 	lds	r24, 0x00B4	; 0x8000b4 <temp>
 5a4:	88 0f       	add	r24, r24
 5a6:	86 99       	sbic	0x10, 6	; 16
 5a8:	81 60       	ori	r24, 0x01	; 1
 5aa:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <temp>
 5ae:	86 99       	sbic	0x10, 6	; 16
 5b0:	fe cf       	rjmp	.-4      	; 0x5ae <Receive_data_DHT11+0x1c>
 5b2:	21 50       	subi	r18, 0x01	; 1
 5b4:	31 09       	sbc	r19, r1
 5b6:	79 f7       	brne	.-34     	; 0x596 <Receive_data_DHT11+0x4>
 5b8:	80 91 b4 00 	lds	r24, 0x00B4	; 0x8000b4 <temp>
 5bc:	08 95       	ret

000005be <SendDHT11Data>:
 5be:	cf 93       	push	r28
 5c0:	df 93       	push	r29
 5c2:	00 d0       	rcall	.+0      	; 0x5c4 <SendDHT11Data+0x6>
 5c4:	00 d0       	rcall	.+0      	; 0x5c6 <SendDHT11Data+0x8>
 5c6:	1f 92       	push	r1
 5c8:	cd b7       	in	r28, 0x3d	; 61
 5ca:	de b7       	in	r29, 0x3e	; 62
 5cc:	0e 94 b4 02 	call	0x568	; 0x568 <Request>
 5d0:	0e 94 c1 02 	call	0x582	; 0x582 <Response>
 5d4:	0e 94 c9 02 	call	0x592	; 0x592 <Receive_data_DHT11>
 5d8:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <humidity>
 5dc:	0e 94 c9 02 	call	0x592	; 0x592 <Receive_data_DHT11>
 5e0:	80 93 b9 00 	sts	0x00B9, r24	; 0x8000b9 <D_RH>
 5e4:	0e 94 c9 02 	call	0x592	; 0x592 <Receive_data_DHT11>
 5e8:	80 93 b7 00 	sts	0x00B7, r24	; 0x8000b7 <temperature>
 5ec:	0e 94 c9 02 	call	0x592	; 0x592 <Receive_data_DHT11>
 5f0:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <D_Temp>
 5f4:	0e 94 c9 02 	call	0x592	; 0x592 <Receive_data_DHT11>
 5f8:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <CheckSum>
 5fc:	90 91 b8 00 	lds	r25, 0x00B8	; 0x8000b8 <humidity>
 600:	20 91 b9 00 	lds	r18, 0x00B9	; 0x8000b9 <D_RH>
 604:	30 e0       	ldi	r19, 0x00	; 0
 606:	29 0f       	add	r18, r25
 608:	31 1d       	adc	r19, r1
 60a:	90 91 b7 00 	lds	r25, 0x00B7	; 0x8000b7 <temperature>
 60e:	29 0f       	add	r18, r25
 610:	31 1d       	adc	r19, r1
 612:	90 91 bb 00 	lds	r25, 0x00BB	; 0x8000bb <D_Temp>
 616:	29 0f       	add	r18, r25
 618:	31 1d       	adc	r19, r1
 61a:	90 e0       	ldi	r25, 0x00	; 0
 61c:	28 17       	cp	r18, r24
 61e:	39 07       	cpc	r19, r25
 620:	21 f0       	breq	.+8      	; 0x62a <SendDHT11Data+0x6c>
 622:	8a e6       	ldi	r24, 0x6A	; 106
 624:	90 e0       	ldi	r25, 0x00	; 0
 626:	0e 94 68 00 	call	0xd0	; 0xd0 <Uart_Send_String>
 62a:	81 e4       	ldi	r24, 0x41	; 65
 62c:	89 83       	std	Y+1, r24	; 0x01
 62e:	82 e4       	ldi	r24, 0x42	; 66
 630:	8a 83       	std	Y+2, r24	; 0x02
 632:	83 e4       	ldi	r24, 0x43	; 67
 634:	8b 83       	std	Y+3, r24	; 0x03
 636:	80 91 b7 00 	lds	r24, 0x00B7	; 0x8000b7 <temperature>
 63a:	8c 83       	std	Y+4, r24	; 0x04
 63c:	80 91 b8 00 	lds	r24, 0x00B8	; 0x8000b8 <humidity>
 640:	8d 83       	std	Y+5, r24	; 0x05
 642:	ce 01       	movw	r24, r28
 644:	01 96       	adiw	r24, 0x01	; 1
 646:	0e 94 54 02 	call	0x4a8	; 0x4a8 <SendAnswer>
 64a:	2f ef       	ldi	r18, 0xFF	; 255
 64c:	85 eb       	ldi	r24, 0xB5	; 181
 64e:	95 e3       	ldi	r25, 0x35	; 53
 650:	21 50       	subi	r18, 0x01	; 1
 652:	80 40       	sbci	r24, 0x00	; 0
 654:	90 40       	sbci	r25, 0x00	; 0
 656:	e1 f7       	brne	.-8      	; 0x650 <SendDHT11Data+0x92>
 658:	00 c0       	rjmp	.+0      	; 0x65a <SendDHT11Data+0x9c>
 65a:	00 00       	nop
 65c:	0f 90       	pop	r0
 65e:	0f 90       	pop	r0
 660:	0f 90       	pop	r0
 662:	0f 90       	pop	r0
 664:	0f 90       	pop	r0
 666:	df 91       	pop	r29
 668:	cf 91       	pop	r28
 66a:	08 95       	ret

0000066c <initRelays>:
 66c:	d1 9a       	sbi	0x1a, 1	; 26
 66e:	d9 98       	cbi	0x1b, 1	; 27
 670:	08 95       	ret

00000672 <ToggleLights>:
 672:	9b b3       	in	r25, 0x1b	; 27
 674:	82 e0       	ldi	r24, 0x02	; 2
 676:	89 27       	eor	r24, r25
 678:	8b bb       	out	0x1b, r24	; 27
 67a:	2f ef       	ldi	r18, 0xFF	; 255
 67c:	80 e7       	ldi	r24, 0x70	; 112
 67e:	92 e0       	ldi	r25, 0x02	; 2
 680:	21 50       	subi	r18, 0x01	; 1
 682:	80 40       	sbci	r24, 0x00	; 0
 684:	90 40       	sbci	r25, 0x00	; 0
 686:	e1 f7       	brne	.-8      	; 0x680 <ToggleLights+0xe>
 688:	00 c0       	rjmp	.+0      	; 0x68a <ToggleLights+0x18>
 68a:	00 00       	nop
 68c:	08 95       	ret

0000068e <CheckLightSwitches>:
 68e:	cf 93       	push	r28
 690:	c9 b3       	in	r28, 0x19	; 25
 692:	c1 70       	andi	r28, 0x01	; 1
 694:	80 91 b6 00 	lds	r24, 0x00B6	; 0x8000b6 <lastSwitchState>
 698:	c8 17       	cp	r28, r24
 69a:	21 f0       	breq	.+8      	; 0x6a4 <CheckLightSwitches+0x16>
 69c:	0e 94 39 03 	call	0x672	; 0x672 <ToggleLights>
 6a0:	c0 93 b6 00 	sts	0x00B6, r28	; 0x8000b6 <lastSwitchState>
 6a4:	cf 91       	pop	r28
 6a6:	08 95       	ret

000006a8 <__vector_1>:
 6a8:	1f 92       	push	r1
 6aa:	0f 92       	push	r0
 6ac:	0f b6       	in	r0, 0x3f	; 63
 6ae:	0f 92       	push	r0
 6b0:	11 24       	eor	r1, r1
 6b2:	0f 93       	push	r16
 6b4:	1f 93       	push	r17
 6b6:	2f 93       	push	r18
 6b8:	3f 93       	push	r19
 6ba:	4f 93       	push	r20
 6bc:	5f 93       	push	r21
 6be:	6f 93       	push	r22
 6c0:	7f 93       	push	r23
 6c2:	8f 93       	push	r24
 6c4:	9f 93       	push	r25
 6c6:	af 93       	push	r26
 6c8:	bf 93       	push	r27
 6ca:	ef 93       	push	r30
 6cc:	ff 93       	push	r31
 6ce:	cf 93       	push	r28
 6d0:	df 93       	push	r29
 6d2:	cd b7       	in	r28, 0x3d	; 61
 6d4:	de b7       	in	r29, 0x3e	; 62
 6d6:	2a 97       	sbiw	r28, 0x0a	; 10
 6d8:	de bf       	out	0x3e, r29	; 62
 6da:	cd bf       	out	0x3d, r28	; 61
 6dc:	85 e0       	ldi	r24, 0x05	; 5
 6de:	e0 e6       	ldi	r30, 0x60	; 96
 6e0:	f0 e0       	ldi	r31, 0x00	; 0
 6e2:	de 01       	movw	r26, r28
 6e4:	16 96       	adiw	r26, 0x06	; 6
 6e6:	01 90       	ld	r0, Z+
 6e8:	0d 92       	st	X+, r0
 6ea:	8a 95       	dec	r24
 6ec:	e1 f7       	brne	.-8      	; 0x6e6 <__vector_1+0x3e>
 6ee:	f8 94       	cli
 6f0:	c3 98       	cbi	0x18, 3	; 24
 6f2:	25 e0       	ldi	r18, 0x05	; 5
 6f4:	40 e0       	ldi	r20, 0x00	; 0
 6f6:	50 e0       	ldi	r21, 0x00	; 0
 6f8:	61 e6       	ldi	r22, 0x61	; 97
 6fa:	80 e0       	ldi	r24, 0x00	; 0
 6fc:	0e 94 7d 00 	call	0xfa	; 0xfa <ReadWriteNRF>
 700:	8c 01       	movw	r16, r24
 702:	fc 01       	movw	r30, r24
 704:	84 81       	ldd	r24, Z+4	; 0x04
 706:	86 31       	cpi	r24, 0x16	; 22
 708:	81 f5       	brne	.+96     	; 0x76a <__vector_1+0xc2>
 70a:	80 e8       	ldi	r24, 0x80	; 128
 70c:	90 e0       	ldi	r25, 0x00	; 0
 70e:	0e 94 68 00 	call	0xd0	; 0xd0 <Uart_Send_String>
 712:	f8 01       	movw	r30, r16
 714:	83 81       	ldd	r24, Z+3	; 0x03
 716:	80 37       	cpi	r24, 0x70	; 112
 718:	19 f4       	brne	.+6      	; 0x720 <__vector_1+0x78>
 71a:	0e 94 df 02 	call	0x5be	; 0x5be <SendDHT11Data>
 71e:	25 c0       	rjmp	.+74     	; 0x76a <__vector_1+0xc2>
 720:	86 36       	cpi	r24, 0x66	; 102
 722:	21 f4       	brne	.+8      	; 0x72c <__vector_1+0x84>
 724:	81 e0       	ldi	r24, 0x01	; 1
 726:	80 93 b5 00 	sts	0x00B5, r24	; 0x8000b5 <successfullySend>
 72a:	1f c0       	rjmp	.+62     	; 0x76a <__vector_1+0xc2>
 72c:	81 35       	cpi	r24, 0x51	; 81
 72e:	41 f4       	brne	.+16     	; 0x740 <__vector_1+0x98>
 730:	0e 94 39 03 	call	0x672	; 0x672 <ToggleLights>
 734:	89 b3       	in	r24, 0x19	; 25
 736:	86 95       	lsr	r24
 738:	81 70       	andi	r24, 0x01	; 1
 73a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <lastRelay1State>
 73e:	15 c0       	rjmp	.+42     	; 0x76a <__vector_1+0xc2>
 740:	82 35       	cpi	r24, 0x52	; 82
 742:	79 f4       	brne	.+30     	; 0x762 <__vector_1+0xba>
 744:	89 b3       	in	r24, 0x19	; 25
 746:	91 e4       	ldi	r25, 0x41	; 65
 748:	99 83       	std	Y+1, r25	; 0x01
 74a:	92 e4       	ldi	r25, 0x42	; 66
 74c:	9a 83       	std	Y+2, r25	; 0x02
 74e:	93 e4       	ldi	r25, 0x43	; 67
 750:	9b 83       	std	Y+3, r25	; 0x03
 752:	94 e4       	ldi	r25, 0x44	; 68
 754:	9c 83       	std	Y+4, r25	; 0x04
 756:	86 95       	lsr	r24
 758:	81 70       	andi	r24, 0x01	; 1
 75a:	8d 83       	std	Y+5, r24	; 0x05
 75c:	ce 01       	movw	r24, r28
 75e:	01 96       	adiw	r24, 0x01	; 1
 760:	02 c0       	rjmp	.+4      	; 0x766 <__vector_1+0xbe>
 762:	ce 01       	movw	r24, r28
 764:	06 96       	adiw	r24, 0x06	; 6
 766:	0e 94 54 02 	call	0x4a8	; 0x4a8 <SendAnswer>
 76a:	78 94       	sei
 76c:	2a 96       	adiw	r28, 0x0a	; 10
 76e:	0f b6       	in	r0, 0x3f	; 63
 770:	f8 94       	cli
 772:	de bf       	out	0x3e, r29	; 62
 774:	0f be       	out	0x3f, r0	; 63
 776:	cd bf       	out	0x3d, r28	; 61
 778:	df 91       	pop	r29
 77a:	cf 91       	pop	r28
 77c:	ff 91       	pop	r31
 77e:	ef 91       	pop	r30
 780:	bf 91       	pop	r27
 782:	af 91       	pop	r26
 784:	9f 91       	pop	r25
 786:	8f 91       	pop	r24
 788:	7f 91       	pop	r23
 78a:	6f 91       	pop	r22
 78c:	5f 91       	pop	r21
 78e:	4f 91       	pop	r20
 790:	3f 91       	pop	r19
 792:	2f 91       	pop	r18
 794:	1f 91       	pop	r17
 796:	0f 91       	pop	r16
 798:	0f 90       	pop	r0
 79a:	0f be       	out	0x3f, r0	; 63
 79c:	0f 90       	pop	r0
 79e:	1f 90       	pop	r1
 7a0:	18 95       	reti

000007a2 <initPIRSensor>:
 7a2:	d3 98       	cbi	0x1a, 3	; 26
 7a4:	08 95       	ret

000007a6 <initLightSwitch>:
 7a6:	d0 98       	cbi	0x1a, 0	; 26
 7a8:	d8 9a       	sbi	0x1b, 0	; 27
 7aa:	08 95       	ret

000007ac <main>:
 7ac:	cf 93       	push	r28
 7ae:	df 93       	push	r29
 7b0:	cd b7       	in	r28, 0x3d	; 61
 7b2:	de b7       	in	r29, 0x3e	; 62
 7b4:	2a 97       	sbiw	r28, 0x0a	; 10
 7b6:	0f b6       	in	r0, 0x3f	; 63
 7b8:	f8 94       	cli
 7ba:	de bf       	out	0x3e, r29	; 62
 7bc:	0f be       	out	0x3f, r0	; 63
 7be:	cd bf       	out	0x3d, r28	; 61
 7c0:	b8 9a       	sbi	0x17, 0	; 23
 7c2:	c0 9a       	sbi	0x18, 0	; 24
 7c4:	0e 94 58 00 	call	0xb0	; 0xb0 <Uart_Init>
 7c8:	0e 94 49 00 	call	0x92	; 0x92 <spi_master_init>
 7cc:	85 e0       	ldi	r24, 0x05	; 5
 7ce:	e5 e6       	ldi	r30, 0x65	; 101
 7d0:	f0 e0       	ldi	r31, 0x00	; 0
 7d2:	de 01       	movw	r26, r28
 7d4:	16 96       	adiw	r26, 0x06	; 6
 7d6:	01 90       	ld	r0, Z+
 7d8:	0d 92       	st	X+, r0
 7da:	8a 95       	dec	r24
 7dc:	e1 f7       	brne	.-8      	; 0x7d6 <main+0x2a>
 7de:	85 e0       	ldi	r24, 0x05	; 5
 7e0:	e5 e6       	ldi	r30, 0x65	; 101
 7e2:	f0 e0       	ldi	r31, 0x00	; 0
 7e4:	de 01       	movw	r26, r28
 7e6:	11 96       	adiw	r26, 0x01	; 1
 7e8:	01 90       	ld	r0, Z+
 7ea:	0d 92       	st	X+, r0
 7ec:	8a 95       	dec	r24
 7ee:	e1 f7       	brne	.-8      	; 0x7e8 <main+0x3c>
 7f0:	22 e5       	ldi	r18, 0x52	; 82
 7f2:	ae 01       	movw	r20, r28
 7f4:	4f 5f       	subi	r20, 0xFF	; 255
 7f6:	5f 4f       	sbci	r21, 0xFF	; 255
 7f8:	be 01       	movw	r22, r28
 7fa:	6a 5f       	subi	r22, 0xFA	; 250
 7fc:	7f 4f       	sbci	r23, 0xFF	; 255
 7fe:	80 e0       	ldi	r24, 0x00	; 0
 800:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <Nrf24_init>
 804:	0e 94 36 03 	call	0x66c	; 0x66c <initRelays>
 808:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <initPIRSensor>
 80c:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <initLightSwitch>
 810:	0e 94 74 00 	call	0xe8	; 0xe8 <EnableExternalInterrupt0>
 814:	0e 94 cf 01 	call	0x39e	; 0x39e <resetNrf>
 818:	8a e8       	ldi	r24, 0x8A	; 138
 81a:	90 e0       	ldi	r25, 0x00	; 0
 81c:	0e 94 68 00 	call	0xd0	; 0xd0 <Uart_Send_String>
 820:	89 b3       	in	r24, 0x19	; 25
 822:	86 95       	lsr	r24
 824:	81 70       	andi	r24, 0x01	; 1
 826:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <lastRelay1State>
 82a:	89 b3       	in	r24, 0x19	; 25
 82c:	81 70       	andi	r24, 0x01	; 1
 82e:	80 93 b6 00 	sts	0x00B6, r24	; 0x8000b6 <lastSwitchState>
 832:	0e 94 0d 02 	call	0x41a	; 0x41a <receive_data>
 836:	0e 94 47 03 	call	0x68e	; 0x68e <CheckLightSwitches>
 83a:	0e 94 a2 02 	call	0x544	; 0x544 <CheckRelays>
 83e:	f9 cf       	rjmp	.-14     	; 0x832 <main+0x86>

00000840 <_exit>:
 840:	f8 94       	cli

00000842 <__stop_program>:
 842:	ff cf       	rjmp	.-2      	; 0x842 <__stop_program>
